//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.mujoco.xml.size;

import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.beans.PropertyVetoException;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeSupport;
import java.util.HashMap;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import com.kscs.util.jaxb.Buildable;
import com.kscs.util.jaxb.Copyable;
import com.kscs.util.jaxb.PartialCopyable;
import com.kscs.util.jaxb.PropertyTree;
import com.kscs.util.jaxb.PropertyTreeUse;
import com.kscs.util.jaxb.PropertyVisitor;


/**
 * <p>Java class for sizeType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="sizeType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;attribute name="njmax" type="{http://www.w3.org/2001/XMLSchema}int" default="-1" /&gt;
 *       &lt;attribute name="nconmax" type="{http://www.w3.org/2001/XMLSchema}int" default="-1" /&gt;
 *       &lt;attribute name="nstack" type="{http://www.w3.org/2001/XMLSchema}int" default="-1" /&gt;
 *       &lt;attribute name="nuserdata" type="{http://www.w3.org/2001/XMLSchema}int" default="0" /&gt;
 *       &lt;attribute name="nkey" type="{http://www.w3.org/2001/XMLSchema}int" default="0" /&gt;
 *       &lt;attribute name="nuser_body" type="{http://www.w3.org/2001/XMLSchema}int" default="0" /&gt;
 *       &lt;attribute name="nuser_jnt" type="{http://www.w3.org/2001/XMLSchema}int" default="0" /&gt;
 *       &lt;attribute name="nuser_geom" type="{http://www.w3.org/2001/XMLSchema}int" default="0" /&gt;
 *       &lt;attribute name="nuser_site" type="{http://www.w3.org/2001/XMLSchema}int" default="0" /&gt;
 *       &lt;attribute name="nuser_cam" type="{http://www.w3.org/2001/XMLSchema}int" default="0" /&gt;
 *       &lt;attribute name="nuser_tendon" type="{http://www.w3.org/2001/XMLSchema}int" default="0" /&gt;
 *       &lt;attribute name="nuser_actuator" type="{http://www.w3.org/2001/XMLSchema}int" default="0" /&gt;
 *       &lt;attribute name="nuser_sensor" type="{http://www.w3.org/2001/XMLSchema}int" default="0" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "sizeType")
public class SizeType implements Cloneable, Copyable, PartialCopyable
{

    @XmlAttribute(name = "njmax")
    protected Integer njmax;
    @XmlAttribute(name = "nconmax")
    protected Integer nconmax;
    @XmlAttribute(name = "nstack")
    protected Integer nstack;
    @XmlAttribute(name = "nuserdata")
    protected Integer nuserdata;
    @XmlAttribute(name = "nkey")
    protected Integer nkey;
    @XmlAttribute(name = "nuser_body")
    protected Integer nuserBody;
    @XmlAttribute(name = "nuser_jnt")
    protected Integer nuserJnt;
    @XmlAttribute(name = "nuser_geom")
    protected Integer nuserGeom;
    @XmlAttribute(name = "nuser_site")
    protected Integer nuserSite;
    @XmlAttribute(name = "nuser_cam")
    protected Integer nuserCam;
    @XmlAttribute(name = "nuser_tendon")
    protected Integer nuserTendon;
    @XmlAttribute(name = "nuser_actuator")
    protected Integer nuserActuator;
    @XmlAttribute(name = "nuser_sensor")
    protected Integer nuserSensor;
    protected final transient VetoableChangeSupport vetoableChange__Support = new VetoableChangeSupport(this);
    protected final transient PropertyChangeSupport propertyChange__Support = new PropertyChangeSupport(this);

    /**
     * Generated by copy-constructor plugin, JAXB requires public no-arg constructor.
     * 
     */
    public SizeType() {
        // Generated by copy-constructor plugin, JAXB requires public no-arg constructor.
    }

    /**
     * Instantiates a SizeType copying the state of another SizeType
     * 
     * @param _other
     *     The original SizeType from which to copy state.
     */
    public SizeType(final SizeType _other) {
        this.njmax = _other.njmax;
        this.nconmax = _other.nconmax;
        this.nstack = _other.nstack;
        this.nuserdata = _other.nuserdata;
        this.nkey = _other.nkey;
        this.nuserBody = _other.nuserBody;
        this.nuserJnt = _other.nuserJnt;
        this.nuserGeom = _other.nuserGeom;
        this.nuserSite = _other.nuserSite;
        this.nuserCam = _other.nuserCam;
        this.nuserTendon = _other.nuserTendon;
        this.nuserActuator = _other.nuserActuator;
        this.nuserSensor = _other.nuserSensor;
    }

    /**
     * Instantiates a SizeType copying the state of another SizeType
     * 
     * @param _propertyTreeUse
     *     Meaning of the : Exclude or include members contained in property path.
     * @param _propertyTree
     *     A restricting  that defines which nodes of the source object tree should actually be copied.
     * @param _other
     *     The original SizeType from which to copy state.
     */
    public SizeType(final SizeType _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        final PropertyTree njmaxPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("njmax"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(njmaxPropertyTree!= null):((njmaxPropertyTree == null)||(!njmaxPropertyTree.isLeaf())))) {
            this.njmax = _other.njmax;
        }
        final PropertyTree nconmaxPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nconmax"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nconmaxPropertyTree!= null):((nconmaxPropertyTree == null)||(!nconmaxPropertyTree.isLeaf())))) {
            this.nconmax = _other.nconmax;
        }
        final PropertyTree nstackPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nstack"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nstackPropertyTree!= null):((nstackPropertyTree == null)||(!nstackPropertyTree.isLeaf())))) {
            this.nstack = _other.nstack;
        }
        final PropertyTree nuserdataPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserdata"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserdataPropertyTree!= null):((nuserdataPropertyTree == null)||(!nuserdataPropertyTree.isLeaf())))) {
            this.nuserdata = _other.nuserdata;
        }
        final PropertyTree nkeyPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nkey"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nkeyPropertyTree!= null):((nkeyPropertyTree == null)||(!nkeyPropertyTree.isLeaf())))) {
            this.nkey = _other.nkey;
        }
        final PropertyTree nuserBodyPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserBody"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserBodyPropertyTree!= null):((nuserBodyPropertyTree == null)||(!nuserBodyPropertyTree.isLeaf())))) {
            this.nuserBody = _other.nuserBody;
        }
        final PropertyTree nuserJntPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserJnt"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserJntPropertyTree!= null):((nuserJntPropertyTree == null)||(!nuserJntPropertyTree.isLeaf())))) {
            this.nuserJnt = _other.nuserJnt;
        }
        final PropertyTree nuserGeomPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserGeom"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserGeomPropertyTree!= null):((nuserGeomPropertyTree == null)||(!nuserGeomPropertyTree.isLeaf())))) {
            this.nuserGeom = _other.nuserGeom;
        }
        final PropertyTree nuserSitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserSite"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserSitePropertyTree!= null):((nuserSitePropertyTree == null)||(!nuserSitePropertyTree.isLeaf())))) {
            this.nuserSite = _other.nuserSite;
        }
        final PropertyTree nuserCamPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserCam"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserCamPropertyTree!= null):((nuserCamPropertyTree == null)||(!nuserCamPropertyTree.isLeaf())))) {
            this.nuserCam = _other.nuserCam;
        }
        final PropertyTree nuserTendonPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserTendon"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserTendonPropertyTree!= null):((nuserTendonPropertyTree == null)||(!nuserTendonPropertyTree.isLeaf())))) {
            this.nuserTendon = _other.nuserTendon;
        }
        final PropertyTree nuserActuatorPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserActuator"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserActuatorPropertyTree!= null):((nuserActuatorPropertyTree == null)||(!nuserActuatorPropertyTree.isLeaf())))) {
            this.nuserActuator = _other.nuserActuator;
        }
        final PropertyTree nuserSensorPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserSensor"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserSensorPropertyTree!= null):((nuserSensorPropertyTree == null)||(!nuserSensorPropertyTree.isLeaf())))) {
            this.nuserSensor = _other.nuserSensor;
        }
    }

    /**
     * Gets the value of the njmax property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNjmax() {
        if (njmax == null) {
            return -1;
        } else {
            return njmax;
        }
    }

    /**
     * Gets the value of the nconmax property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNconmax() {
        if (nconmax == null) {
            return -1;
        } else {
            return nconmax;
        }
    }

    /**
     * Gets the value of the nstack property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNstack() {
        if (nstack == null) {
            return -1;
        } else {
            return nstack;
        }
    }

    /**
     * Gets the value of the nuserdata property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNuserdata() {
        if (nuserdata == null) {
            return  0;
        } else {
            return nuserdata;
        }
    }

    /**
     * Gets the value of the nkey property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNkey() {
        if (nkey == null) {
            return  0;
        } else {
            return nkey;
        }
    }

    /**
     * Gets the value of the nuserBody property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNuserBody() {
        if (nuserBody == null) {
            return  0;
        } else {
            return nuserBody;
        }
    }

    /**
     * Gets the value of the nuserJnt property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNuserJnt() {
        if (nuserJnt == null) {
            return  0;
        } else {
            return nuserJnt;
        }
    }

    /**
     * Gets the value of the nuserGeom property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNuserGeom() {
        if (nuserGeom == null) {
            return  0;
        } else {
            return nuserGeom;
        }
    }

    /**
     * Gets the value of the nuserSite property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNuserSite() {
        if (nuserSite == null) {
            return  0;
        } else {
            return nuserSite;
        }
    }

    /**
     * Gets the value of the nuserCam property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNuserCam() {
        if (nuserCam == null) {
            return  0;
        } else {
            return nuserCam;
        }
    }

    /**
     * Gets the value of the nuserTendon property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNuserTendon() {
        if (nuserTendon == null) {
            return  0;
        } else {
            return nuserTendon;
        }
    }

    /**
     * Gets the value of the nuserActuator property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNuserActuator() {
        if (nuserActuator == null) {
            return  0;
        } else {
            return nuserActuator;
        }
    }

    /**
     * Gets the value of the nuserSensor property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNuserSensor() {
        if (nuserSensor == null) {
            return  0;
        } else {
            return nuserSensor;
        }
    }

    public void addVetoableChangeListener(final VetoableChangeListener vetoableChangeListener) {
        this.vetoableChange__Support.addVetoableChangeListener(vetoableChangeListener);
    }

    public void removeVetoableChangeListener(final VetoableChangeListener vetoableChangeListener) {
        this.vetoableChange__Support.removeVetoableChangeListener(vetoableChangeListener);
    }

    public SizeType withVetoableChangeListener(final VetoableChangeListener vetoableChangeListener) {
        addVetoableChangeListener(vetoableChangeListener);
        return this;
    }

    public void addPropertyChangeListener(final PropertyChangeListener propertyChangeListener) {
        this.propertyChange__Support.addPropertyChangeListener(propertyChangeListener);
    }

    public void removePropertyChangeListener(final PropertyChangeListener propertyChangeListener) {
        this.propertyChange__Support.removePropertyChangeListener(propertyChangeListener);
    }

    public SizeType withPropertyChangeListener(final PropertyChangeListener propertyChangeListener) {
        addPropertyChangeListener(propertyChangeListener);
        return this;
    }

    public void setNjmax(final Integer value) {
        final Integer __oldValue = this.njmax;
        try {
            this.vetoableChange__Support.fireVetoableChange("njmax", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.njmax = value;
        this.propertyChange__Support.firePropertyChange("njmax", __oldValue, value);
    }

    public void setNconmax(final Integer value) {
        final Integer __oldValue = this.nconmax;
        try {
            this.vetoableChange__Support.fireVetoableChange("nconmax", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.nconmax = value;
        this.propertyChange__Support.firePropertyChange("nconmax", __oldValue, value);
    }

    public void setNstack(final Integer value) {
        final Integer __oldValue = this.nstack;
        try {
            this.vetoableChange__Support.fireVetoableChange("nstack", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.nstack = value;
        this.propertyChange__Support.firePropertyChange("nstack", __oldValue, value);
    }

    public void setNuserdata(final Integer value) {
        final Integer __oldValue = this.nuserdata;
        try {
            this.vetoableChange__Support.fireVetoableChange("nuserdata", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.nuserdata = value;
        this.propertyChange__Support.firePropertyChange("nuserdata", __oldValue, value);
    }

    public void setNkey(final Integer value) {
        final Integer __oldValue = this.nkey;
        try {
            this.vetoableChange__Support.fireVetoableChange("nkey", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.nkey = value;
        this.propertyChange__Support.firePropertyChange("nkey", __oldValue, value);
    }

    public void setNuserBody(final Integer value) {
        final Integer __oldValue = this.nuserBody;
        try {
            this.vetoableChange__Support.fireVetoableChange("nuserBody", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.nuserBody = value;
        this.propertyChange__Support.firePropertyChange("nuserBody", __oldValue, value);
    }

    public void setNuserJnt(final Integer value) {
        final Integer __oldValue = this.nuserJnt;
        try {
            this.vetoableChange__Support.fireVetoableChange("nuserJnt", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.nuserJnt = value;
        this.propertyChange__Support.firePropertyChange("nuserJnt", __oldValue, value);
    }

    public void setNuserGeom(final Integer value) {
        final Integer __oldValue = this.nuserGeom;
        try {
            this.vetoableChange__Support.fireVetoableChange("nuserGeom", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.nuserGeom = value;
        this.propertyChange__Support.firePropertyChange("nuserGeom", __oldValue, value);
    }

    public void setNuserSite(final Integer value) {
        final Integer __oldValue = this.nuserSite;
        try {
            this.vetoableChange__Support.fireVetoableChange("nuserSite", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.nuserSite = value;
        this.propertyChange__Support.firePropertyChange("nuserSite", __oldValue, value);
    }

    public void setNuserCam(final Integer value) {
        final Integer __oldValue = this.nuserCam;
        try {
            this.vetoableChange__Support.fireVetoableChange("nuserCam", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.nuserCam = value;
        this.propertyChange__Support.firePropertyChange("nuserCam", __oldValue, value);
    }

    public void setNuserTendon(final Integer value) {
        final Integer __oldValue = this.nuserTendon;
        try {
            this.vetoableChange__Support.fireVetoableChange("nuserTendon", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.nuserTendon = value;
        this.propertyChange__Support.firePropertyChange("nuserTendon", __oldValue, value);
    }

    public void setNuserActuator(final Integer value) {
        final Integer __oldValue = this.nuserActuator;
        try {
            this.vetoableChange__Support.fireVetoableChange("nuserActuator", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.nuserActuator = value;
        this.propertyChange__Support.firePropertyChange("nuserActuator", __oldValue, value);
    }

    public void setNuserSensor(final Integer value) {
        final Integer __oldValue = this.nuserSensor;
        try {
            this.vetoableChange__Support.fireVetoableChange("nuserSensor", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.nuserSensor = value;
        this.propertyChange__Support.firePropertyChange("nuserSensor", __oldValue, value);
    }

    @Override
    public SizeType clone() {
        final SizeType _newObject;
        try {
            _newObject = ((SizeType) super.clone());
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }
        return _newObject;
    }

    @Override
    public SizeType createCopy() {
        final SizeType _newObject;
        try {
            _newObject = ((SizeType) super.clone());
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }
        _newObject.njmax = this.njmax;
        _newObject.nconmax = this.nconmax;
        _newObject.nstack = this.nstack;
        _newObject.nuserdata = this.nuserdata;
        _newObject.nkey = this.nkey;
        _newObject.nuserBody = this.nuserBody;
        _newObject.nuserJnt = this.nuserJnt;
        _newObject.nuserGeom = this.nuserGeom;
        _newObject.nuserSite = this.nuserSite;
        _newObject.nuserCam = this.nuserCam;
        _newObject.nuserTendon = this.nuserTendon;
        _newObject.nuserActuator = this.nuserActuator;
        _newObject.nuserSensor = this.nuserSensor;
        return _newObject;
    }

    @Override
    public SizeType createCopy(final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        final SizeType _newObject;
        try {
            _newObject = ((SizeType) super.clone());
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }
        final PropertyTree njmaxPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("njmax"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(njmaxPropertyTree!= null):((njmaxPropertyTree == null)||(!njmaxPropertyTree.isLeaf())))) {
            _newObject.njmax = this.njmax;
        }
        final PropertyTree nconmaxPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nconmax"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nconmaxPropertyTree!= null):((nconmaxPropertyTree == null)||(!nconmaxPropertyTree.isLeaf())))) {
            _newObject.nconmax = this.nconmax;
        }
        final PropertyTree nstackPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nstack"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nstackPropertyTree!= null):((nstackPropertyTree == null)||(!nstackPropertyTree.isLeaf())))) {
            _newObject.nstack = this.nstack;
        }
        final PropertyTree nuserdataPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserdata"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserdataPropertyTree!= null):((nuserdataPropertyTree == null)||(!nuserdataPropertyTree.isLeaf())))) {
            _newObject.nuserdata = this.nuserdata;
        }
        final PropertyTree nkeyPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nkey"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nkeyPropertyTree!= null):((nkeyPropertyTree == null)||(!nkeyPropertyTree.isLeaf())))) {
            _newObject.nkey = this.nkey;
        }
        final PropertyTree nuserBodyPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserBody"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserBodyPropertyTree!= null):((nuserBodyPropertyTree == null)||(!nuserBodyPropertyTree.isLeaf())))) {
            _newObject.nuserBody = this.nuserBody;
        }
        final PropertyTree nuserJntPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserJnt"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserJntPropertyTree!= null):((nuserJntPropertyTree == null)||(!nuserJntPropertyTree.isLeaf())))) {
            _newObject.nuserJnt = this.nuserJnt;
        }
        final PropertyTree nuserGeomPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserGeom"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserGeomPropertyTree!= null):((nuserGeomPropertyTree == null)||(!nuserGeomPropertyTree.isLeaf())))) {
            _newObject.nuserGeom = this.nuserGeom;
        }
        final PropertyTree nuserSitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserSite"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserSitePropertyTree!= null):((nuserSitePropertyTree == null)||(!nuserSitePropertyTree.isLeaf())))) {
            _newObject.nuserSite = this.nuserSite;
        }
        final PropertyTree nuserCamPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserCam"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserCamPropertyTree!= null):((nuserCamPropertyTree == null)||(!nuserCamPropertyTree.isLeaf())))) {
            _newObject.nuserCam = this.nuserCam;
        }
        final PropertyTree nuserTendonPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserTendon"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserTendonPropertyTree!= null):((nuserTendonPropertyTree == null)||(!nuserTendonPropertyTree.isLeaf())))) {
            _newObject.nuserTendon = this.nuserTendon;
        }
        final PropertyTree nuserActuatorPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserActuator"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserActuatorPropertyTree!= null):((nuserActuatorPropertyTree == null)||(!nuserActuatorPropertyTree.isLeaf())))) {
            _newObject.nuserActuator = this.nuserActuator;
        }
        final PropertyTree nuserSensorPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserSensor"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserSensorPropertyTree!= null):((nuserSensorPropertyTree == null)||(!nuserSensorPropertyTree.isLeaf())))) {
            _newObject.nuserSensor = this.nuserSensor;
        }
        return _newObject;
    }

    @Override
    public SizeType copyExcept(final PropertyTree _propertyTree) {
        return createCopy(_propertyTree, PropertyTreeUse.EXCLUDE);
    }

    @Override
    public SizeType copyOnly(final PropertyTree _propertyTree) {
        return createCopy(_propertyTree, PropertyTreeUse.INCLUDE);
    }

    /**
     * Copies all state of this object to a builder. This method is used by the {@link #copyOf} method and should not be called directly by client code.
     * 
     * @param _other
     *     A builder instance to which the state of this object will be copied.
     */
    public<_B >void copyTo(final SizeType.Builder<_B> _other) {
        _other.njmax = this.njmax;
        _other.nconmax = this.nconmax;
        _other.nstack = this.nstack;
        _other.nuserdata = this.nuserdata;
        _other.nkey = this.nkey;
        _other.nuserBody = this.nuserBody;
        _other.nuserJnt = this.nuserJnt;
        _other.nuserGeom = this.nuserGeom;
        _other.nuserSite = this.nuserSite;
        _other.nuserCam = this.nuserCam;
        _other.nuserTendon = this.nuserTendon;
        _other.nuserActuator = this.nuserActuator;
        _other.nuserSensor = this.nuserSensor;
    }

    public<_B >SizeType.Builder<_B> newCopyBuilder(final _B _parentBuilder) {
        return new SizeType.Builder<_B>(_parentBuilder, this, true);
    }

    public SizeType.Builder<Void> newCopyBuilder() {
        return newCopyBuilder(null);
    }

    public static SizeType.Builder<Void> builder() {
        return new SizeType.Builder<Void>(null, null, false);
    }

    public static<_B >SizeType.Builder<_B> copyOf(final SizeType _other) {
        final SizeType.Builder<_B> _newBuilder = new SizeType.Builder<_B>(null, null, false);
        _other.copyTo(_newBuilder);
        return _newBuilder;
    }

    /**
     * Copies all state of this object to a builder. This method is used by the {@link #copyOf} method and should not be called directly by client code.
     * 
     * @param _other
     *     A builder instance to which the state of this object will be copied.
     */
    public<_B >void copyTo(final SizeType.Builder<_B> _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        final PropertyTree njmaxPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("njmax"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(njmaxPropertyTree!= null):((njmaxPropertyTree == null)||(!njmaxPropertyTree.isLeaf())))) {
            _other.njmax = this.njmax;
        }
        final PropertyTree nconmaxPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nconmax"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nconmaxPropertyTree!= null):((nconmaxPropertyTree == null)||(!nconmaxPropertyTree.isLeaf())))) {
            _other.nconmax = this.nconmax;
        }
        final PropertyTree nstackPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nstack"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nstackPropertyTree!= null):((nstackPropertyTree == null)||(!nstackPropertyTree.isLeaf())))) {
            _other.nstack = this.nstack;
        }
        final PropertyTree nuserdataPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserdata"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserdataPropertyTree!= null):((nuserdataPropertyTree == null)||(!nuserdataPropertyTree.isLeaf())))) {
            _other.nuserdata = this.nuserdata;
        }
        final PropertyTree nkeyPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nkey"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nkeyPropertyTree!= null):((nkeyPropertyTree == null)||(!nkeyPropertyTree.isLeaf())))) {
            _other.nkey = this.nkey;
        }
        final PropertyTree nuserBodyPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserBody"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserBodyPropertyTree!= null):((nuserBodyPropertyTree == null)||(!nuserBodyPropertyTree.isLeaf())))) {
            _other.nuserBody = this.nuserBody;
        }
        final PropertyTree nuserJntPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserJnt"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserJntPropertyTree!= null):((nuserJntPropertyTree == null)||(!nuserJntPropertyTree.isLeaf())))) {
            _other.nuserJnt = this.nuserJnt;
        }
        final PropertyTree nuserGeomPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserGeom"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserGeomPropertyTree!= null):((nuserGeomPropertyTree == null)||(!nuserGeomPropertyTree.isLeaf())))) {
            _other.nuserGeom = this.nuserGeom;
        }
        final PropertyTree nuserSitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserSite"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserSitePropertyTree!= null):((nuserSitePropertyTree == null)||(!nuserSitePropertyTree.isLeaf())))) {
            _other.nuserSite = this.nuserSite;
        }
        final PropertyTree nuserCamPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserCam"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserCamPropertyTree!= null):((nuserCamPropertyTree == null)||(!nuserCamPropertyTree.isLeaf())))) {
            _other.nuserCam = this.nuserCam;
        }
        final PropertyTree nuserTendonPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserTendon"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserTendonPropertyTree!= null):((nuserTendonPropertyTree == null)||(!nuserTendonPropertyTree.isLeaf())))) {
            _other.nuserTendon = this.nuserTendon;
        }
        final PropertyTree nuserActuatorPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserActuator"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserActuatorPropertyTree!= null):((nuserActuatorPropertyTree == null)||(!nuserActuatorPropertyTree.isLeaf())))) {
            _other.nuserActuator = this.nuserActuator;
        }
        final PropertyTree nuserSensorPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserSensor"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserSensorPropertyTree!= null):((nuserSensorPropertyTree == null)||(!nuserSensorPropertyTree.isLeaf())))) {
            _other.nuserSensor = this.nuserSensor;
        }
    }

    public<_B >SizeType.Builder<_B> newCopyBuilder(final _B _parentBuilder, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        return new SizeType.Builder<_B>(_parentBuilder, this, true, _propertyTree, _propertyTreeUse);
    }

    public SizeType.Builder<Void> newCopyBuilder(final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        return newCopyBuilder(null, _propertyTree, _propertyTreeUse);
    }

    public static<_B >SizeType.Builder<_B> copyOf(final SizeType _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        final SizeType.Builder<_B> _newBuilder = new SizeType.Builder<_B>(null, null, false);
        _other.copyTo(_newBuilder, _propertyTree, _propertyTreeUse);
        return _newBuilder;
    }

    public static SizeType.Builder<Void> copyExcept(final SizeType _other, final PropertyTree _propertyTree) {
        return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
    }

    public static SizeType.Builder<Void> copyOnly(final SizeType _other, final PropertyTree _propertyTree) {
        return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
    }

    public SizeType visit(final PropertyVisitor _visitor_) {
        _visitor_.visit(this);
        return this;
    }

    public static class Builder<_B >implements Buildable
    {

        protected final _B _parentBuilder;
        private Integer njmax;
        private Integer nconmax;
        private Integer nstack;
        private Integer nuserdata;
        private Integer nkey;
        private Integer nuserBody;
        private Integer nuserJnt;
        private Integer nuserGeom;
        private Integer nuserSite;
        private Integer nuserCam;
        private Integer nuserTendon;
        private Integer nuserActuator;
        private Integer nuserSensor;

        public Builder(final _B _parentBuilder, final SizeType _other, final boolean _copy) {
            this._parentBuilder = _parentBuilder;
            if (_other!= null) {
                this.njmax = _other.njmax;
                this.nconmax = _other.nconmax;
                this.nstack = _other.nstack;
                this.nuserdata = _other.nuserdata;
                this.nkey = _other.nkey;
                this.nuserBody = _other.nuserBody;
                this.nuserJnt = _other.nuserJnt;
                this.nuserGeom = _other.nuserGeom;
                this.nuserSite = _other.nuserSite;
                this.nuserCam = _other.nuserCam;
                this.nuserTendon = _other.nuserTendon;
                this.nuserActuator = _other.nuserActuator;
                this.nuserSensor = _other.nuserSensor;
            }
        }

        public Builder(final _B _parentBuilder, final SizeType _other, final boolean _copy, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            this._parentBuilder = _parentBuilder;
            if (_other!= null) {
                final PropertyTree njmaxPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("njmax"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(njmaxPropertyTree!= null):((njmaxPropertyTree == null)||(!njmaxPropertyTree.isLeaf())))) {
                    this.njmax = _other.njmax;
                }
                final PropertyTree nconmaxPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nconmax"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nconmaxPropertyTree!= null):((nconmaxPropertyTree == null)||(!nconmaxPropertyTree.isLeaf())))) {
                    this.nconmax = _other.nconmax;
                }
                final PropertyTree nstackPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nstack"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nstackPropertyTree!= null):((nstackPropertyTree == null)||(!nstackPropertyTree.isLeaf())))) {
                    this.nstack = _other.nstack;
                }
                final PropertyTree nuserdataPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserdata"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserdataPropertyTree!= null):((nuserdataPropertyTree == null)||(!nuserdataPropertyTree.isLeaf())))) {
                    this.nuserdata = _other.nuserdata;
                }
                final PropertyTree nkeyPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nkey"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nkeyPropertyTree!= null):((nkeyPropertyTree == null)||(!nkeyPropertyTree.isLeaf())))) {
                    this.nkey = _other.nkey;
                }
                final PropertyTree nuserBodyPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserBody"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserBodyPropertyTree!= null):((nuserBodyPropertyTree == null)||(!nuserBodyPropertyTree.isLeaf())))) {
                    this.nuserBody = _other.nuserBody;
                }
                final PropertyTree nuserJntPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserJnt"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserJntPropertyTree!= null):((nuserJntPropertyTree == null)||(!nuserJntPropertyTree.isLeaf())))) {
                    this.nuserJnt = _other.nuserJnt;
                }
                final PropertyTree nuserGeomPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserGeom"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserGeomPropertyTree!= null):((nuserGeomPropertyTree == null)||(!nuserGeomPropertyTree.isLeaf())))) {
                    this.nuserGeom = _other.nuserGeom;
                }
                final PropertyTree nuserSitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserSite"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserSitePropertyTree!= null):((nuserSitePropertyTree == null)||(!nuserSitePropertyTree.isLeaf())))) {
                    this.nuserSite = _other.nuserSite;
                }
                final PropertyTree nuserCamPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserCam"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserCamPropertyTree!= null):((nuserCamPropertyTree == null)||(!nuserCamPropertyTree.isLeaf())))) {
                    this.nuserCam = _other.nuserCam;
                }
                final PropertyTree nuserTendonPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserTendon"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserTendonPropertyTree!= null):((nuserTendonPropertyTree == null)||(!nuserTendonPropertyTree.isLeaf())))) {
                    this.nuserTendon = _other.nuserTendon;
                }
                final PropertyTree nuserActuatorPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserActuator"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserActuatorPropertyTree!= null):((nuserActuatorPropertyTree == null)||(!nuserActuatorPropertyTree.isLeaf())))) {
                    this.nuserActuator = _other.nuserActuator;
                }
                final PropertyTree nuserSensorPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("nuserSensor"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(nuserSensorPropertyTree!= null):((nuserSensorPropertyTree == null)||(!nuserSensorPropertyTree.isLeaf())))) {
                    this.nuserSensor = _other.nuserSensor;
                }
            }
        }

        public _B end() {
            return this._parentBuilder;
        }

        protected<_P extends SizeType >_P init(final _P _product) {
            _product.njmax = this.njmax;
            _product.nconmax = this.nconmax;
            _product.nstack = this.nstack;
            _product.nuserdata = this.nuserdata;
            _product.nkey = this.nkey;
            _product.nuserBody = this.nuserBody;
            _product.nuserJnt = this.nuserJnt;
            _product.nuserGeom = this.nuserGeom;
            _product.nuserSite = this.nuserSite;
            _product.nuserCam = this.nuserCam;
            _product.nuserTendon = this.nuserTendon;
            _product.nuserActuator = this.nuserActuator;
            _product.nuserSensor = this.nuserSensor;
            return _product;
        }

        /**
         * Sets the new value of "njmax" (any previous value will be replaced)
         * 
         * @param njmax
         *     New value of the "njmax" property.
         */
        public SizeType.Builder<_B> withNjmax(final Integer njmax) {
            this.njmax = njmax;
            return this;
        }

        /**
         * Sets the new value of "nconmax" (any previous value will be replaced)
         * 
         * @param nconmax
         *     New value of the "nconmax" property.
         */
        public SizeType.Builder<_B> withNconmax(final Integer nconmax) {
            this.nconmax = nconmax;
            return this;
        }

        /**
         * Sets the new value of "nstack" (any previous value will be replaced)
         * 
         * @param nstack
         *     New value of the "nstack" property.
         */
        public SizeType.Builder<_B> withNstack(final Integer nstack) {
            this.nstack = nstack;
            return this;
        }

        /**
         * Sets the new value of "nuserdata" (any previous value will be replaced)
         * 
         * @param nuserdata
         *     New value of the "nuserdata" property.
         */
        public SizeType.Builder<_B> withNuserdata(final Integer nuserdata) {
            this.nuserdata = nuserdata;
            return this;
        }

        /**
         * Sets the new value of "nkey" (any previous value will be replaced)
         * 
         * @param nkey
         *     New value of the "nkey" property.
         */
        public SizeType.Builder<_B> withNkey(final Integer nkey) {
            this.nkey = nkey;
            return this;
        }

        /**
         * Sets the new value of "nuserBody" (any previous value will be replaced)
         * 
         * @param nuserBody
         *     New value of the "nuserBody" property.
         */
        public SizeType.Builder<_B> withNuserBody(final Integer nuserBody) {
            this.nuserBody = nuserBody;
            return this;
        }

        /**
         * Sets the new value of "nuserJnt" (any previous value will be replaced)
         * 
         * @param nuserJnt
         *     New value of the "nuserJnt" property.
         */
        public SizeType.Builder<_B> withNuserJnt(final Integer nuserJnt) {
            this.nuserJnt = nuserJnt;
            return this;
        }

        /**
         * Sets the new value of "nuserGeom" (any previous value will be replaced)
         * 
         * @param nuserGeom
         *     New value of the "nuserGeom" property.
         */
        public SizeType.Builder<_B> withNuserGeom(final Integer nuserGeom) {
            this.nuserGeom = nuserGeom;
            return this;
        }

        /**
         * Sets the new value of "nuserSite" (any previous value will be replaced)
         * 
         * @param nuserSite
         *     New value of the "nuserSite" property.
         */
        public SizeType.Builder<_B> withNuserSite(final Integer nuserSite) {
            this.nuserSite = nuserSite;
            return this;
        }

        /**
         * Sets the new value of "nuserCam" (any previous value will be replaced)
         * 
         * @param nuserCam
         *     New value of the "nuserCam" property.
         */
        public SizeType.Builder<_B> withNuserCam(final Integer nuserCam) {
            this.nuserCam = nuserCam;
            return this;
        }

        /**
         * Sets the new value of "nuserTendon" (any previous value will be replaced)
         * 
         * @param nuserTendon
         *     New value of the "nuserTendon" property.
         */
        public SizeType.Builder<_B> withNuserTendon(final Integer nuserTendon) {
            this.nuserTendon = nuserTendon;
            return this;
        }

        /**
         * Sets the new value of "nuserActuator" (any previous value will be replaced)
         * 
         * @param nuserActuator
         *     New value of the "nuserActuator" property.
         */
        public SizeType.Builder<_B> withNuserActuator(final Integer nuserActuator) {
            this.nuserActuator = nuserActuator;
            return this;
        }

        /**
         * Sets the new value of "nuserSensor" (any previous value will be replaced)
         * 
         * @param nuserSensor
         *     New value of the "nuserSensor" property.
         */
        public SizeType.Builder<_B> withNuserSensor(final Integer nuserSensor) {
            this.nuserSensor = nuserSensor;
            return this;
        }

        @Override
        public SizeType build() {
            return this.init(new SizeType());
        }

        public SizeType.Builder<_B> copyOf(final SizeType _other) {
            _other.copyTo(this);
            return this;
        }

        public SizeType.Builder<_B> copyOf(final SizeType.Builder _other) {
            return copyOf(_other.build());
        }

    }

    public static class PropInfo {

        public final static transient String NJMAX = "njmax";
        public final static transient String NCONMAX = "nconmax";
        public final static transient String NSTACK = "nstack";
        public final static transient String NUSERDATA = "nuserdata";
        public final static transient String NKEY = "nkey";
        public final static transient String NUSER_BODY = "nuserBody";
        public final static transient String NUSER_JNT = "nuserJnt";
        public final static transient String NUSER_GEOM = "nuserGeom";
        public final static transient String NUSER_SITE = "nuserSite";
        public final static transient String NUSER_CAM = "nuserCam";
        public final static transient String NUSER_TENDON = "nuserTendon";
        public final static transient String NUSER_ACTUATOR = "nuserActuator";
        public final static transient String NUSER_SENSOR = "nuserSensor";

    }

    public static class Select
        extends SizeType.Selector<SizeType.Select, Void>
    {


        Select() {
            super(null, null, null);
        }

        public static SizeType.Select _root() {
            return new SizeType.Select();
        }

    }

    public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
        extends com.kscs.util.jaxb.Selector<TRoot, TParent>
    {

        private com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> njmax = null;
        private com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nconmax = null;
        private com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nstack = null;
        private com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserdata = null;
        private com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nkey = null;
        private com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserBody = null;
        private com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserJnt = null;
        private com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserGeom = null;
        private com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserSite = null;
        private com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserCam = null;
        private com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserTendon = null;
        private com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserActuator = null;
        private com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserSensor = null;

        public Selector(final TRoot root, final TParent parent, final String propertyName) {
            super(root, parent, propertyName);
        }

        @Override
        public Map<String, PropertyTree> buildChildren() {
            final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
            products.putAll(super.buildChildren());
            if (this.njmax!= null) {
                products.put("njmax", this.njmax.init());
            }
            if (this.nconmax!= null) {
                products.put("nconmax", this.nconmax.init());
            }
            if (this.nstack!= null) {
                products.put("nstack", this.nstack.init());
            }
            if (this.nuserdata!= null) {
                products.put("nuserdata", this.nuserdata.init());
            }
            if (this.nkey!= null) {
                products.put("nkey", this.nkey.init());
            }
            if (this.nuserBody!= null) {
                products.put("nuserBody", this.nuserBody.init());
            }
            if (this.nuserJnt!= null) {
                products.put("nuserJnt", this.nuserJnt.init());
            }
            if (this.nuserGeom!= null) {
                products.put("nuserGeom", this.nuserGeom.init());
            }
            if (this.nuserSite!= null) {
                products.put("nuserSite", this.nuserSite.init());
            }
            if (this.nuserCam!= null) {
                products.put("nuserCam", this.nuserCam.init());
            }
            if (this.nuserTendon!= null) {
                products.put("nuserTendon", this.nuserTendon.init());
            }
            if (this.nuserActuator!= null) {
                products.put("nuserActuator", this.nuserActuator.init());
            }
            if (this.nuserSensor!= null) {
                products.put("nuserSensor", this.nuserSensor.init());
            }
            return products;
        }

        public com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> njmax() {
            return ((this.njmax == null)?this.njmax = new com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>>(this._root, this, "njmax"):this.njmax);
        }

        public com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nconmax() {
            return ((this.nconmax == null)?this.nconmax = new com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>>(this._root, this, "nconmax"):this.nconmax);
        }

        public com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nstack() {
            return ((this.nstack == null)?this.nstack = new com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>>(this._root, this, "nstack"):this.nstack);
        }

        public com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserdata() {
            return ((this.nuserdata == null)?this.nuserdata = new com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>>(this._root, this, "nuserdata"):this.nuserdata);
        }

        public com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nkey() {
            return ((this.nkey == null)?this.nkey = new com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>>(this._root, this, "nkey"):this.nkey);
        }

        public com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserBody() {
            return ((this.nuserBody == null)?this.nuserBody = new com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>>(this._root, this, "nuserBody"):this.nuserBody);
        }

        public com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserJnt() {
            return ((this.nuserJnt == null)?this.nuserJnt = new com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>>(this._root, this, "nuserJnt"):this.nuserJnt);
        }

        public com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserGeom() {
            return ((this.nuserGeom == null)?this.nuserGeom = new com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>>(this._root, this, "nuserGeom"):this.nuserGeom);
        }

        public com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserSite() {
            return ((this.nuserSite == null)?this.nuserSite = new com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>>(this._root, this, "nuserSite"):this.nuserSite);
        }

        public com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserCam() {
            return ((this.nuserCam == null)?this.nuserCam = new com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>>(this._root, this, "nuserCam"):this.nuserCam);
        }

        public com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserTendon() {
            return ((this.nuserTendon == null)?this.nuserTendon = new com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>>(this._root, this, "nuserTendon"):this.nuserTendon);
        }

        public com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserActuator() {
            return ((this.nuserActuator == null)?this.nuserActuator = new com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>>(this._root, this, "nuserActuator"):this.nuserActuator);
        }

        public com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>> nuserSensor() {
            return ((this.nuserSensor == null)?this.nuserSensor = new com.kscs.util.jaxb.Selector<TRoot, SizeType.Selector<TRoot, TParent>>(this._root, this, "nuserSensor"):this.nuserSensor);
        }

    }

}
