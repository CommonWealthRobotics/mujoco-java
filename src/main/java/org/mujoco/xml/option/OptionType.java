//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.01.14 at 05:07:30 PM EST 
//


package org.mujoco.xml.option;

import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.mujoco.xml.attributetypes.CollisionType;
import org.mujoco.xml.attributetypes.ConeType;
import org.mujoco.xml.attributetypes.IntegratorType;
import org.mujoco.xml.attributetypes.JacobianType;
import org.mujoco.xml.attributetypes.SolverType;


/**
 * <p>Java class for optionType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="optionType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="timestep" type="{http://www.w3.org/2001/XMLSchema}decimal" default=".002" />
 *       &lt;attribute name="apirate" type="{http://www.w3.org/2001/XMLSchema}decimal" default="100" />
 *       &lt;attribute name="impratio" type="{http://www.w3.org/2001/XMLSchema}decimal" default="1" />
 *       &lt;attribute name="gravity" type="{attributeTypes}threeRealsType" default="0 0 -9.81" />
 *       &lt;attribute name="wind" type="{attributeTypes}threeRealsType" default="0 0 0" />
 *       &lt;attribute name="magnetic" type="{attributeTypes}threeRealsType" default="0 -.5 0" />
 *       &lt;attribute name="density" type="{http://www.w3.org/2001/XMLSchema}decimal" default="0" />
 *       &lt;attribute name="viscosity" type="{http://www.w3.org/2001/XMLSchema}decimal" default="0" />
 *       &lt;attribute name="o_margin" type="{http://www.w3.org/2001/XMLSchema}decimal" default="0" />
 *       &lt;attribute name="o_solimp" type="{attributeTypes}solimpType" default="0.9 0.95 0.001 0.5 2" />
 *       &lt;attribute name="o_solref" type="{attributeTypes}twoRealsType" default="0.02 1" />
 *       &lt;attribute name="integrator" type="{attributeTypes}integratorType" default="Euler" />
 *       &lt;attribute name="collision" type="{attributeTypes}collisionType" default="all" />
 *       &lt;attribute name="cone" type="{attributeTypes}coneType" default="pyramidal" />
 *       &lt;attribute name="jacobian" type="{attributeTypes}jacobianType" default="auto" />
 *       &lt;attribute name="solver" type="{attributeTypes}solverType" default="Newton" />
 *       &lt;attribute name="iterations" type="{http://www.w3.org/2001/XMLSchema}int" default="100" />
 *       &lt;attribute name="tolerance" type="{http://www.w3.org/2001/XMLSchema}double" default="1e-8" />
 *       &lt;attribute name="noslip_iterations" type="{http://www.w3.org/2001/XMLSchema}int" default="0" />
 *       &lt;attribute name="noslip_tolerance" type="{http://www.w3.org/2001/XMLSchema}double" default="1e-6" />
 *       &lt;attribute name="mpr_iterations" type="{http://www.w3.org/2001/XMLSchema}int" default="50" />
 *       &lt;attribute name="mpr_tolerance" type="{http://www.w3.org/2001/XMLSchema}double" default="1e-6" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "optionType")
@XmlSeeAlso({
    org.mujoco.xml.Mujoco.Option.class
})
public class OptionType {

    @XmlAttribute(name = "timestep")
    protected BigDecimal timestep;
    @XmlAttribute(name = "apirate")
    protected BigDecimal apirate;
    @XmlAttribute(name = "impratio")
    protected BigDecimal impratio;
    @XmlAttribute(name = "gravity")
    protected String gravity;
    @XmlAttribute(name = "wind")
    protected String wind;
    @XmlAttribute(name = "magnetic")
    protected String magnetic;
    @XmlAttribute(name = "density")
    protected BigDecimal density;
    @XmlAttribute(name = "viscosity")
    protected BigDecimal viscosity;
    @XmlAttribute(name = "o_margin")
    protected BigDecimal oMargin;
    @XmlAttribute(name = "o_solimp")
    protected String oSolimp;
    @XmlAttribute(name = "o_solref")
    protected String oSolref;
    @XmlAttribute(name = "integrator")
    protected IntegratorType integrator;
    @XmlAttribute(name = "collision")
    protected CollisionType collision;
    @XmlAttribute(name = "cone")
    protected ConeType cone;
    @XmlAttribute(name = "jacobian")
    protected JacobianType jacobian;
    @XmlAttribute(name = "solver")
    protected SolverType solver;
    @XmlAttribute(name = "iterations")
    protected Integer iterations;
    @XmlAttribute(name = "tolerance")
    protected Double tolerance;
    @XmlAttribute(name = "noslip_iterations")
    protected Integer noslipIterations;
    @XmlAttribute(name = "noslip_tolerance")
    protected Double noslipTolerance;
    @XmlAttribute(name = "mpr_iterations")
    protected Integer mprIterations;
    @XmlAttribute(name = "mpr_tolerance")
    protected Double mprTolerance;

    /**
     * Gets the value of the timestep property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTimestep() {
        if (timestep == null) {
            return new BigDecimal(".002");
        } else {
            return timestep;
        }
    }

    /**
     * Sets the value of the timestep property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTimestep(BigDecimal value) {
        this.timestep = value;
    }

    /**
     * Gets the value of the apirate property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getApirate() {
        if (apirate == null) {
            return new BigDecimal("100");
        } else {
            return apirate;
        }
    }

    /**
     * Sets the value of the apirate property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setApirate(BigDecimal value) {
        this.apirate = value;
    }

    /**
     * Gets the value of the impratio property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getImpratio() {
        if (impratio == null) {
            return new BigDecimal("1");
        } else {
            return impratio;
        }
    }

    /**
     * Sets the value of the impratio property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setImpratio(BigDecimal value) {
        this.impratio = value;
    }

    /**
     * Gets the value of the gravity property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGravity() {
        if (gravity == null) {
            return "0 0 -9.81";
        } else {
            return gravity;
        }
    }

    /**
     * Sets the value of the gravity property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGravity(String value) {
        this.gravity = value;
    }

    /**
     * Gets the value of the wind property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWind() {
        if (wind == null) {
            return "0 0 0";
        } else {
            return wind;
        }
    }

    /**
     * Sets the value of the wind property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWind(String value) {
        this.wind = value;
    }

    /**
     * Gets the value of the magnetic property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMagnetic() {
        if (magnetic == null) {
            return "0 -.5 0";
        } else {
            return magnetic;
        }
    }

    /**
     * Sets the value of the magnetic property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMagnetic(String value) {
        this.magnetic = value;
    }

    /**
     * Gets the value of the density property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getDensity() {
        if (density == null) {
            return new BigDecimal("0");
        } else {
            return density;
        }
    }

    /**
     * Sets the value of the density property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setDensity(BigDecimal value) {
        this.density = value;
    }

    /**
     * Gets the value of the viscosity property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getViscosity() {
        if (viscosity == null) {
            return new BigDecimal("0");
        } else {
            return viscosity;
        }
    }

    /**
     * Sets the value of the viscosity property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setViscosity(BigDecimal value) {
        this.viscosity = value;
    }

    /**
     * Gets the value of the oMargin property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getOMargin() {
        if (oMargin == null) {
            return new BigDecimal("0");
        } else {
            return oMargin;
        }
    }

    /**
     * Sets the value of the oMargin property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setOMargin(BigDecimal value) {
        this.oMargin = value;
    }

    /**
     * Gets the value of the oSolimp property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOSolimp() {
        if (oSolimp == null) {
            return "0.9 0.95 0.001 0.5 2";
        } else {
            return oSolimp;
        }
    }

    /**
     * Sets the value of the oSolimp property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOSolimp(String value) {
        this.oSolimp = value;
    }

    /**
     * Gets the value of the oSolref property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOSolref() {
        if (oSolref == null) {
            return "0.02 1";
        } else {
            return oSolref;
        }
    }

    /**
     * Sets the value of the oSolref property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOSolref(String value) {
        this.oSolref = value;
    }

    /**
     * Gets the value of the integrator property.
     * 
     * @return
     *     possible object is
     *     {@link IntegratorType }
     *     
     */
    public IntegratorType getIntegrator() {
        if (integrator == null) {
            return IntegratorType.EULER;
        } else {
            return integrator;
        }
    }

    /**
     * Sets the value of the integrator property.
     * 
     * @param value
     *     allowed object is
     *     {@link IntegratorType }
     *     
     */
    public void setIntegrator(IntegratorType value) {
        this.integrator = value;
    }

    /**
     * Gets the value of the collision property.
     * 
     * @return
     *     possible object is
     *     {@link CollisionType }
     *     
     */
    public CollisionType getCollision() {
        if (collision == null) {
            return CollisionType.ALL;
        } else {
            return collision;
        }
    }

    /**
     * Sets the value of the collision property.
     * 
     * @param value
     *     allowed object is
     *     {@link CollisionType }
     *     
     */
    public void setCollision(CollisionType value) {
        this.collision = value;
    }

    /**
     * Gets the value of the cone property.
     * 
     * @return
     *     possible object is
     *     {@link ConeType }
     *     
     */
    public ConeType getCone() {
        if (cone == null) {
            return ConeType.PYRAMIDAL;
        } else {
            return cone;
        }
    }

    /**
     * Sets the value of the cone property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConeType }
     *     
     */
    public void setCone(ConeType value) {
        this.cone = value;
    }

    /**
     * Gets the value of the jacobian property.
     * 
     * @return
     *     possible object is
     *     {@link JacobianType }
     *     
     */
    public JacobianType getJacobian() {
        if (jacobian == null) {
            return JacobianType.AUTO;
        } else {
            return jacobian;
        }
    }

    /**
     * Sets the value of the jacobian property.
     * 
     * @param value
     *     allowed object is
     *     {@link JacobianType }
     *     
     */
    public void setJacobian(JacobianType value) {
        this.jacobian = value;
    }

    /**
     * Gets the value of the solver property.
     * 
     * @return
     *     possible object is
     *     {@link SolverType }
     *     
     */
    public SolverType getSolver() {
        if (solver == null) {
            return SolverType.NEWTON;
        } else {
            return solver;
        }
    }

    /**
     * Sets the value of the solver property.
     * 
     * @param value
     *     allowed object is
     *     {@link SolverType }
     *     
     */
    public void setSolver(SolverType value) {
        this.solver = value;
    }

    /**
     * Gets the value of the iterations property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getIterations() {
        if (iterations == null) {
            return  100;
        } else {
            return iterations;
        }
    }

    /**
     * Sets the value of the iterations property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setIterations(Integer value) {
        this.iterations = value;
    }

    /**
     * Gets the value of the tolerance property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public double getTolerance() {
        if (tolerance == null) {
            return  1.0E-8D;
        } else {
            return tolerance;
        }
    }

    /**
     * Sets the value of the tolerance property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setTolerance(Double value) {
        this.tolerance = value;
    }

    /**
     * Gets the value of the noslipIterations property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNoslipIterations() {
        if (noslipIterations == null) {
            return  0;
        } else {
            return noslipIterations;
        }
    }

    /**
     * Sets the value of the noslipIterations property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setNoslipIterations(Integer value) {
        this.noslipIterations = value;
    }

    /**
     * Gets the value of the noslipTolerance property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public double getNoslipTolerance() {
        if (noslipTolerance == null) {
            return  1.0E-6D;
        } else {
            return noslipTolerance;
        }
    }

    /**
     * Sets the value of the noslipTolerance property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setNoslipTolerance(Double value) {
        this.noslipTolerance = value;
    }

    /**
     * Gets the value of the mprIterations property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getMprIterations() {
        if (mprIterations == null) {
            return  50;
        } else {
            return mprIterations;
        }
    }

    /**
     * Sets the value of the mprIterations property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMprIterations(Integer value) {
        this.mprIterations = value;
    }

    /**
     * Gets the value of the mprTolerance property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public double getMprTolerance() {
        if (mprTolerance == null) {
            return  1.0E-6D;
        } else {
            return mprTolerance;
        }
    }

    /**
     * Sets the value of the mprTolerance property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setMprTolerance(Double value) {
        this.mprTolerance = value;
    }

}
