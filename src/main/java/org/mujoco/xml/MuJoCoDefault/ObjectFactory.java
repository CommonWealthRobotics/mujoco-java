//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.01.14 at 10:23:33 PM EST 
//


package org.mujoco.xml.MuJoCoDefault;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.mujoco.xml.MuJoCoDefault package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.mujoco.xml.MuJoCoDefault
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DefaultType }
     * 
     */
    public DefaultType createDefaultType() {
        return new DefaultType();
    }

    /**
     * Create an instance of {@link DefaultmainType }
     * 
     */
    public DefaultmainType createDefaultmainType() {
        return new DefaultmainType();
    }

    /**
     * Create an instance of {@link MeshType }
     * 
     */
    public MeshType createMeshType() {
        return new MeshType();
    }

    /**
     * Create an instance of {@link MaterialType }
     * 
     */
    public MaterialType createMaterialType() {
        return new MaterialType();
    }

    /**
     * Create an instance of {@link JointType }
     * 
     */
    public JointType createJointType() {
        return new JointType();
    }

    /**
     * Create an instance of {@link GeomType }
     * 
     */
    public GeomType createGeomType() {
        return new GeomType();
    }

    /**
     * Create an instance of {@link SiteType }
     * 
     */
    public SiteType createSiteType() {
        return new SiteType();
    }

    /**
     * Create an instance of {@link CameraType }
     * 
     */
    public CameraType createCameraType() {
        return new CameraType();
    }

    /**
     * Create an instance of {@link LightType }
     * 
     */
    public LightType createLightType() {
        return new LightType();
    }

    /**
     * Create an instance of {@link PairType }
     * 
     */
    public PairType createPairType() {
        return new PairType();
    }

    /**
     * Create an instance of {@link EqualityType }
     * 
     */
    public EqualityType createEqualityType() {
        return new EqualityType();
    }

    /**
     * Create an instance of {@link TendonType }
     * 
     */
    public TendonType createTendonType() {
        return new TendonType();
    }

    /**
     * Create an instance of {@link GeneralType }
     * 
     */
    public GeneralType createGeneralType() {
        return new GeneralType();
    }

    /**
     * Create an instance of {@link MotorType }
     * 
     */
    public MotorType createMotorType() {
        return new MotorType();
    }

    /**
     * Create an instance of {@link PositionType }
     * 
     */
    public PositionType createPositionType() {
        return new PositionType();
    }

    /**
     * Create an instance of {@link VelocityType }
     * 
     */
    public VelocityType createVelocityType() {
        return new VelocityType();
    }

    /**
     * Create an instance of {@link CylinderType }
     * 
     */
    public CylinderType createCylinderType() {
        return new CylinderType();
    }

    /**
     * Create an instance of {@link MuscleType }
     * 
     */
    public MuscleType createMuscleType() {
        return new MuscleType();
    }

}
