//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.01.14 at 05:07:30 PM EST 
//


package org.mujoco.xml.visual;

import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for mapType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="mapType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="stiffness" type="{http://www.w3.org/2001/XMLSchema}decimal" default="100" />
 *       &lt;attribute name="stiffnessrot" type="{http://www.w3.org/2001/XMLSchema}decimal" default="500" />
 *       &lt;attribute name="force" type="{http://www.w3.org/2001/XMLSchema}decimal" default="0.005" />
 *       &lt;attribute name="torque" type="{http://www.w3.org/2001/XMLSchema}decimal" default="0.1" />
 *       &lt;attribute name="alpha" type="{http://www.w3.org/2001/XMLSchema}decimal" default="0.3" />
 *       &lt;attribute name="fogstart" type="{http://www.w3.org/2001/XMLSchema}decimal" default="3" />
 *       &lt;attribute name="fogend" type="{http://www.w3.org/2001/XMLSchema}decimal" default="10" />
 *       &lt;attribute name="znear" type="{http://www.w3.org/2001/XMLSchema}decimal" default="0.01" />
 *       &lt;attribute name="zfar" type="{http://www.w3.org/2001/XMLSchema}decimal" default="50" />
 *       &lt;attribute name="haze" type="{http://www.w3.org/2001/XMLSchema}decimal" default="0.3" />
 *       &lt;attribute name="shadowclip" type="{http://www.w3.org/2001/XMLSchema}decimal" default="1" />
 *       &lt;attribute name="shadowscale" type="{http://www.w3.org/2001/XMLSchema}decimal" default="0.6" />
 *       &lt;attribute name="actuatortendon" type="{http://www.w3.org/2001/XMLSchema}decimal" default="2" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "mapType")
public class MapType {

    @XmlAttribute(name = "stiffness")
    protected BigDecimal stiffness;
    @XmlAttribute(name = "stiffnessrot")
    protected BigDecimal stiffnessrot;
    @XmlAttribute(name = "force")
    protected BigDecimal force;
    @XmlAttribute(name = "torque")
    protected BigDecimal torque;
    @XmlAttribute(name = "alpha")
    protected BigDecimal alpha;
    @XmlAttribute(name = "fogstart")
    protected BigDecimal fogstart;
    @XmlAttribute(name = "fogend")
    protected BigDecimal fogend;
    @XmlAttribute(name = "znear")
    protected BigDecimal znear;
    @XmlAttribute(name = "zfar")
    protected BigDecimal zfar;
    @XmlAttribute(name = "haze")
    protected BigDecimal haze;
    @XmlAttribute(name = "shadowclip")
    protected BigDecimal shadowclip;
    @XmlAttribute(name = "shadowscale")
    protected BigDecimal shadowscale;
    @XmlAttribute(name = "actuatortendon")
    protected BigDecimal actuatortendon;

    /**
     * Gets the value of the stiffness property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getStiffness() {
        if (stiffness == null) {
            return new BigDecimal("100");
        } else {
            return stiffness;
        }
    }

    /**
     * Sets the value of the stiffness property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setStiffness(BigDecimal value) {
        this.stiffness = value;
    }

    /**
     * Gets the value of the stiffnessrot property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getStiffnessrot() {
        if (stiffnessrot == null) {
            return new BigDecimal("500");
        } else {
            return stiffnessrot;
        }
    }

    /**
     * Sets the value of the stiffnessrot property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setStiffnessrot(BigDecimal value) {
        this.stiffnessrot = value;
    }

    /**
     * Gets the value of the force property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getForce() {
        if (force == null) {
            return new BigDecimal("0.005");
        } else {
            return force;
        }
    }

    /**
     * Sets the value of the force property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setForce(BigDecimal value) {
        this.force = value;
    }

    /**
     * Gets the value of the torque property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTorque() {
        if (torque == null) {
            return new BigDecimal("0.1");
        } else {
            return torque;
        }
    }

    /**
     * Sets the value of the torque property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTorque(BigDecimal value) {
        this.torque = value;
    }

    /**
     * Gets the value of the alpha property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getAlpha() {
        if (alpha == null) {
            return new BigDecimal("0.3");
        } else {
            return alpha;
        }
    }

    /**
     * Sets the value of the alpha property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setAlpha(BigDecimal value) {
        this.alpha = value;
    }

    /**
     * Gets the value of the fogstart property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getFogstart() {
        if (fogstart == null) {
            return new BigDecimal("3");
        } else {
            return fogstart;
        }
    }

    /**
     * Sets the value of the fogstart property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setFogstart(BigDecimal value) {
        this.fogstart = value;
    }

    /**
     * Gets the value of the fogend property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getFogend() {
        if (fogend == null) {
            return new BigDecimal("10");
        } else {
            return fogend;
        }
    }

    /**
     * Sets the value of the fogend property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setFogend(BigDecimal value) {
        this.fogend = value;
    }

    /**
     * Gets the value of the znear property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getZnear() {
        if (znear == null) {
            return new BigDecimal("0.01");
        } else {
            return znear;
        }
    }

    /**
     * Sets the value of the znear property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setZnear(BigDecimal value) {
        this.znear = value;
    }

    /**
     * Gets the value of the zfar property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getZfar() {
        if (zfar == null) {
            return new BigDecimal("50");
        } else {
            return zfar;
        }
    }

    /**
     * Sets the value of the zfar property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setZfar(BigDecimal value) {
        this.zfar = value;
    }

    /**
     * Gets the value of the haze property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getHaze() {
        if (haze == null) {
            return new BigDecimal("0.3");
        } else {
            return haze;
        }
    }

    /**
     * Sets the value of the haze property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setHaze(BigDecimal value) {
        this.haze = value;
    }

    /**
     * Gets the value of the shadowclip property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getShadowclip() {
        if (shadowclip == null) {
            return new BigDecimal("1");
        } else {
            return shadowclip;
        }
    }

    /**
     * Sets the value of the shadowclip property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setShadowclip(BigDecimal value) {
        this.shadowclip = value;
    }

    /**
     * Gets the value of the shadowscale property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getShadowscale() {
        if (shadowscale == null) {
            return new BigDecimal("0.6");
        } else {
            return shadowscale;
        }
    }

    /**
     * Sets the value of the shadowscale property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setShadowscale(BigDecimal value) {
        this.shadowscale = value;
    }

    /**
     * Gets the value of the actuatortendon property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getActuatortendon() {
        if (actuatortendon == null) {
            return new BigDecimal("2");
        } else {
            return actuatortendon;
        }
    }

    /**
     * Sets the value of the actuatortendon property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setActuatortendon(BigDecimal value) {
        this.actuatortendon = value;
    }

}
