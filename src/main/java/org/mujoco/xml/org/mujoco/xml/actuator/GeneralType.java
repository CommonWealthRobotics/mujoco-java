//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.03.13 at 04:32:01 PM EDT 
//


package org.mujoco.xml.actuator;

import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.beans.PropertyVetoException;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeSupport;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import com.kscs.util.jaxb.Buildable;
import com.kscs.util.jaxb.Copyable;
import com.kscs.util.jaxb.PartialCopyable;
import com.kscs.util.jaxb.PropertyTree;
import com.kscs.util.jaxb.PropertyTreeUse;
import com.kscs.util.jaxb.PropertyVisitor;
import org.mujoco.xml.attributetypes.BiastypeType;
import org.mujoco.xml.attributetypes.DyntypeType;
import org.mujoco.xml.attributetypes.GaintypeType;


/**
 * <p>Java class for generalType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="generalType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="class" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="group" type="{http://www.w3.org/2001/XMLSchema}int" default="0" /&gt;
 *       &lt;attribute name="ctrllimited" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *       &lt;attribute name="forcelimited" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *       &lt;attribute name="ctrlrange" type="{attributeTypes}twoRealsType" default="0 0" /&gt;
 *       &lt;attribute name="forcerange" type="{attributeTypes}twoRealsType" default="0 0" /&gt;
 *       &lt;attribute name="lengthrange" type="{attributeTypes}twoRealsType" default="0 0" /&gt;
 *       &lt;attribute name="gear" type="{attributeTypes}upToSixRealsType" default="1 0 0 0 0 0" /&gt;
 *       &lt;attribute name="cranklength" type="{http://www.w3.org/2001/XMLSchema}decimal" default="0" /&gt;
 *       &lt;attribute name="joint" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="jointinparent" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="site" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="tendon" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="cranksite" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="slidersite" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="user" type="{attributeTypes}infRealsType" /&gt;
 *       &lt;attribute name="dyntype" type="{attributeTypes}dyntypeType" default="none" /&gt;
 *       &lt;attribute name="gaintype" type="{attributeTypes}gaintypeType" default="fixed" /&gt;
 *       &lt;attribute name="biastype" type="{attributeTypes}biastypeType" default="none" /&gt;
 *       &lt;attribute name="dynprm" type="{attributeTypes}tenRealsType" default="1 0 0 0 0 0 0 0 0 0" /&gt;
 *       &lt;attribute name="gainprm" type="{attributeTypes}tenRealsType" default="1 0 0 0 0 0 0 0 0 0" /&gt;
 *       &lt;attribute name="biasprm" type="{attributeTypes}tenRealsType" default="0 0 0 0 0 0 0 0 0 0" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "generalType")
public class GeneralType implements Cloneable, Copyable, PartialCopyable
{

    @XmlAttribute(name = "name")
    protected String name;
    @XmlAttribute(name = "class")
    protected String clazz;
    @XmlAttribute(name = "group")
    protected Integer group;
    @XmlAttribute(name = "ctrllimited")
    protected Boolean ctrllimited;
    @XmlAttribute(name = "forcelimited")
    protected Boolean forcelimited;
    @XmlAttribute(name = "ctrlrange")
    protected String ctrlrange;
    @XmlAttribute(name = "forcerange")
    protected String forcerange;
    @XmlAttribute(name = "lengthrange")
    protected String lengthrange;
    @XmlAttribute(name = "gear")
    protected String gear;
    @XmlAttribute(name = "cranklength")
    protected BigDecimal cranklength;
    @XmlAttribute(name = "joint")
    protected String joint;
    @XmlAttribute(name = "jointinparent")
    protected String jointinparent;
    @XmlAttribute(name = "site")
    protected String site;
    @XmlAttribute(name = "tendon")
    protected String tendon;
    @XmlAttribute(name = "cranksite")
    protected String cranksite;
    @XmlAttribute(name = "slidersite")
    protected String slidersite;
    @XmlAttribute(name = "user")
    protected String user;
    @XmlAttribute(name = "dyntype")
    protected DyntypeType dyntype;
    @XmlAttribute(name = "gaintype")
    protected GaintypeType gaintype;
    @XmlAttribute(name = "biastype")
    protected BiastypeType biastype;
    @XmlAttribute(name = "dynprm")
    protected String dynprm;
    @XmlAttribute(name = "gainprm")
    protected String gainprm;
    @XmlAttribute(name = "biasprm")
    protected String biasprm;
    protected final transient VetoableChangeSupport vetoableChange__Support = new VetoableChangeSupport(this);
    protected final transient PropertyChangeSupport propertyChange__Support = new PropertyChangeSupport(this);

    /**
     * Generated by copy-constructor plugin, JAXB requires public no-arg constructor.
     * 
     */
    public GeneralType() {
        // Generated by copy-constructor plugin, JAXB requires public no-arg constructor.
    }

    /**
     * Instantiates a GeneralType copying the state of another GeneralType
     * 
     * @param _other
     *     The original GeneralType from which to copy state.
     */
    public GeneralType(final GeneralType _other) {
        this.name = _other.name;
        this.clazz = _other.clazz;
        this.group = _other.group;
        this.ctrllimited = _other.ctrllimited;
        this.forcelimited = _other.forcelimited;
        this.ctrlrange = _other.ctrlrange;
        this.forcerange = _other.forcerange;
        this.lengthrange = _other.lengthrange;
        this.gear = _other.gear;
        this.cranklength = _other.cranklength;
        this.joint = _other.joint;
        this.jointinparent = _other.jointinparent;
        this.site = _other.site;
        this.tendon = _other.tendon;
        this.cranksite = _other.cranksite;
        this.slidersite = _other.slidersite;
        this.user = _other.user;
        this.dyntype = _other.dyntype;
        this.gaintype = _other.gaintype;
        this.biastype = _other.biastype;
        this.dynprm = _other.dynprm;
        this.gainprm = _other.gainprm;
        this.biasprm = _other.biasprm;
    }

    /**
     * Instantiates a GeneralType copying the state of another GeneralType
     * 
     * @param _propertyTreeUse
     *     Meaning of the {@link PropertyPath}: Exclude or include members contained in property path.
     * @param _propertyTree
     *     A restricting {@link PropertyPath} that defines which nodes of the source object tree should actually be copied.
     * @param _other
     *     The original GeneralType from which to copy state.
     */
    public GeneralType(final GeneralType _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        final PropertyTree namePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("name"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(namePropertyTree!= null):((namePropertyTree == null)||(!namePropertyTree.isLeaf())))) {
            this.name = _other.name;
        }
        final PropertyTree clazzPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("clazz"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(clazzPropertyTree!= null):((clazzPropertyTree == null)||(!clazzPropertyTree.isLeaf())))) {
            this.clazz = _other.clazz;
        }
        final PropertyTree groupPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("group"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(groupPropertyTree!= null):((groupPropertyTree == null)||(!groupPropertyTree.isLeaf())))) {
            this.group = _other.group;
        }
        final PropertyTree ctrllimitedPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("ctrllimited"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(ctrllimitedPropertyTree!= null):((ctrllimitedPropertyTree == null)||(!ctrllimitedPropertyTree.isLeaf())))) {
            this.ctrllimited = _other.ctrllimited;
        }
        final PropertyTree forcelimitedPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("forcelimited"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(forcelimitedPropertyTree!= null):((forcelimitedPropertyTree == null)||(!forcelimitedPropertyTree.isLeaf())))) {
            this.forcelimited = _other.forcelimited;
        }
        final PropertyTree ctrlrangePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("ctrlrange"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(ctrlrangePropertyTree!= null):((ctrlrangePropertyTree == null)||(!ctrlrangePropertyTree.isLeaf())))) {
            this.ctrlrange = _other.ctrlrange;
        }
        final PropertyTree forcerangePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("forcerange"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(forcerangePropertyTree!= null):((forcerangePropertyTree == null)||(!forcerangePropertyTree.isLeaf())))) {
            this.forcerange = _other.forcerange;
        }
        final PropertyTree lengthrangePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("lengthrange"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(lengthrangePropertyTree!= null):((lengthrangePropertyTree == null)||(!lengthrangePropertyTree.isLeaf())))) {
            this.lengthrange = _other.lengthrange;
        }
        final PropertyTree gearPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("gear"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(gearPropertyTree!= null):((gearPropertyTree == null)||(!gearPropertyTree.isLeaf())))) {
            this.gear = _other.gear;
        }
        final PropertyTree cranklengthPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("cranklength"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(cranklengthPropertyTree!= null):((cranklengthPropertyTree == null)||(!cranklengthPropertyTree.isLeaf())))) {
            this.cranklength = _other.cranklength;
        }
        final PropertyTree jointPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("joint"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(jointPropertyTree!= null):((jointPropertyTree == null)||(!jointPropertyTree.isLeaf())))) {
            this.joint = _other.joint;
        }
        final PropertyTree jointinparentPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("jointinparent"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(jointinparentPropertyTree!= null):((jointinparentPropertyTree == null)||(!jointinparentPropertyTree.isLeaf())))) {
            this.jointinparent = _other.jointinparent;
        }
        final PropertyTree sitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("site"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(sitePropertyTree!= null):((sitePropertyTree == null)||(!sitePropertyTree.isLeaf())))) {
            this.site = _other.site;
        }
        final PropertyTree tendonPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("tendon"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(tendonPropertyTree!= null):((tendonPropertyTree == null)||(!tendonPropertyTree.isLeaf())))) {
            this.tendon = _other.tendon;
        }
        final PropertyTree cranksitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("cranksite"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(cranksitePropertyTree!= null):((cranksitePropertyTree == null)||(!cranksitePropertyTree.isLeaf())))) {
            this.cranksite = _other.cranksite;
        }
        final PropertyTree slidersitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("slidersite"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(slidersitePropertyTree!= null):((slidersitePropertyTree == null)||(!slidersitePropertyTree.isLeaf())))) {
            this.slidersite = _other.slidersite;
        }
        final PropertyTree userPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("user"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(userPropertyTree!= null):((userPropertyTree == null)||(!userPropertyTree.isLeaf())))) {
            this.user = _other.user;
        }
        final PropertyTree dyntypePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("dyntype"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(dyntypePropertyTree!= null):((dyntypePropertyTree == null)||(!dyntypePropertyTree.isLeaf())))) {
            this.dyntype = _other.dyntype;
        }
        final PropertyTree gaintypePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("gaintype"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(gaintypePropertyTree!= null):((gaintypePropertyTree == null)||(!gaintypePropertyTree.isLeaf())))) {
            this.gaintype = _other.gaintype;
        }
        final PropertyTree biastypePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("biastype"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(biastypePropertyTree!= null):((biastypePropertyTree == null)||(!biastypePropertyTree.isLeaf())))) {
            this.biastype = _other.biastype;
        }
        final PropertyTree dynprmPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("dynprm"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(dynprmPropertyTree!= null):((dynprmPropertyTree == null)||(!dynprmPropertyTree.isLeaf())))) {
            this.dynprm = _other.dynprm;
        }
        final PropertyTree gainprmPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("gainprm"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(gainprmPropertyTree!= null):((gainprmPropertyTree == null)||(!gainprmPropertyTree.isLeaf())))) {
            this.gainprm = _other.gainprm;
        }
        final PropertyTree biasprmPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("biasprm"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(biasprmPropertyTree!= null):((biasprmPropertyTree == null)||(!biasprmPropertyTree.isLeaf())))) {
            this.biasprm = _other.biasprm;
        }
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Gets the value of the clazz property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getClazz() {
        return clazz;
    }

    /**
     * Gets the value of the group property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getGroup() {
        if (group == null) {
            return  0;
        } else {
            return group;
        }
    }

    /**
     * Gets the value of the ctrllimited property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isCtrllimited() {
        if (ctrllimited == null) {
            return false;
        } else {
            return ctrllimited;
        }
    }

    /**
     * Gets the value of the forcelimited property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isForcelimited() {
        if (forcelimited == null) {
            return false;
        } else {
            return forcelimited;
        }
    }

    /**
     * Gets the value of the ctrlrange property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCtrlrange() {
        if (ctrlrange == null) {
            return "0 0";
        } else {
            return ctrlrange;
        }
    }

    /**
     * Gets the value of the forcerange property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getForcerange() {
        if (forcerange == null) {
            return "0 0";
        } else {
            return forcerange;
        }
    }

    /**
     * Gets the value of the lengthrange property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLengthrange() {
        if (lengthrange == null) {
            return "0 0";
        } else {
            return lengthrange;
        }
    }

    /**
     * Gets the value of the gear property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGear() {
        if (gear == null) {
            return "1 0 0 0 0 0";
        } else {
            return gear;
        }
    }

    /**
     * Gets the value of the cranklength property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getCranklength() {
        if (cranklength == null) {
            return new BigDecimal("0");
        } else {
            return cranklength;
        }
    }

    /**
     * Gets the value of the joint property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getJoint() {
        return joint;
    }

    /**
     * Gets the value of the jointinparent property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getJointinparent() {
        return jointinparent;
    }

    /**
     * Gets the value of the site property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSite() {
        return site;
    }

    /**
     * Gets the value of the tendon property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTendon() {
        return tendon;
    }

    /**
     * Gets the value of the cranksite property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCranksite() {
        return cranksite;
    }

    /**
     * Gets the value of the slidersite property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSlidersite() {
        return slidersite;
    }

    /**
     * Gets the value of the user property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUser() {
        return user;
    }

    /**
     * Gets the value of the dyntype property.
     * 
     * @return
     *     possible object is
     *     {@link DyntypeType }
     *     
     */
    public DyntypeType getDyntype() {
        if (dyntype == null) {
            return DyntypeType.NONE;
        } else {
            return dyntype;
        }
    }

    /**
     * Gets the value of the gaintype property.
     * 
     * @return
     *     possible object is
     *     {@link GaintypeType }
     *     
     */
    public GaintypeType getGaintype() {
        if (gaintype == null) {
            return GaintypeType.FIXED;
        } else {
            return gaintype;
        }
    }

    /**
     * Gets the value of the biastype property.
     * 
     * @return
     *     possible object is
     *     {@link BiastypeType }
     *     
     */
    public BiastypeType getBiastype() {
        if (biastype == null) {
            return BiastypeType.NONE;
        } else {
            return biastype;
        }
    }

    /**
     * Gets the value of the dynprm property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDynprm() {
        if (dynprm == null) {
            return "1 0 0 0 0 0 0 0 0 0";
        } else {
            return dynprm;
        }
    }

    /**
     * Gets the value of the gainprm property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGainprm() {
        if (gainprm == null) {
            return "1 0 0 0 0 0 0 0 0 0";
        } else {
            return gainprm;
        }
    }

    /**
     * Gets the value of the biasprm property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBiasprm() {
        if (biasprm == null) {
            return "0 0 0 0 0 0 0 0 0 0";
        } else {
            return biasprm;
        }
    }

    public void addVetoableChangeListener(final VetoableChangeListener vetoableChangeListener) {
        this.vetoableChange__Support.addVetoableChangeListener(vetoableChangeListener);
    }

    public void removeVetoableChangeListener(final VetoableChangeListener vetoableChangeListener) {
        this.vetoableChange__Support.removeVetoableChangeListener(vetoableChangeListener);
    }

    public GeneralType withVetoableChangeListener(final VetoableChangeListener vetoableChangeListener) {
        addVetoableChangeListener(vetoableChangeListener);
        return this;
    }

    public void addPropertyChangeListener(final PropertyChangeListener propertyChangeListener) {
        this.propertyChange__Support.addPropertyChangeListener(propertyChangeListener);
    }

    public void removePropertyChangeListener(final PropertyChangeListener propertyChangeListener) {
        this.propertyChange__Support.removePropertyChangeListener(propertyChangeListener);
    }

    public GeneralType withPropertyChangeListener(final PropertyChangeListener propertyChangeListener) {
        addPropertyChangeListener(propertyChangeListener);
        return this;
    }

    public void setName(final String value) {
        final String __oldValue = this.name;
        try {
            this.vetoableChange__Support.fireVetoableChange("name", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.name = value;
        this.propertyChange__Support.firePropertyChange("name", __oldValue, value);
    }

    public void setClazz(final String value) {
        final String __oldValue = this.clazz;
        try {
            this.vetoableChange__Support.fireVetoableChange("clazz", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.clazz = value;
        this.propertyChange__Support.firePropertyChange("clazz", __oldValue, value);
    }

    public void setGroup(final Integer value) {
        final Integer __oldValue = this.group;
        try {
            this.vetoableChange__Support.fireVetoableChange("group", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.group = value;
        this.propertyChange__Support.firePropertyChange("group", __oldValue, value);
    }

    public void setCtrllimited(final Boolean value) {
        final Boolean __oldValue = this.ctrllimited;
        try {
            this.vetoableChange__Support.fireVetoableChange("ctrllimited", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.ctrllimited = value;
        this.propertyChange__Support.firePropertyChange("ctrllimited", __oldValue, value);
    }

    public void setForcelimited(final Boolean value) {
        final Boolean __oldValue = this.forcelimited;
        try {
            this.vetoableChange__Support.fireVetoableChange("forcelimited", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.forcelimited = value;
        this.propertyChange__Support.firePropertyChange("forcelimited", __oldValue, value);
    }

    public void setCtrlrange(final String value) {
        final String __oldValue = this.ctrlrange;
        try {
            this.vetoableChange__Support.fireVetoableChange("ctrlrange", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.ctrlrange = value;
        this.propertyChange__Support.firePropertyChange("ctrlrange", __oldValue, value);
    }

    public void setForcerange(final String value) {
        final String __oldValue = this.forcerange;
        try {
            this.vetoableChange__Support.fireVetoableChange("forcerange", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.forcerange = value;
        this.propertyChange__Support.firePropertyChange("forcerange", __oldValue, value);
    }

    public void setLengthrange(final String value) {
        final String __oldValue = this.lengthrange;
        try {
            this.vetoableChange__Support.fireVetoableChange("lengthrange", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.lengthrange = value;
        this.propertyChange__Support.firePropertyChange("lengthrange", __oldValue, value);
    }

    public void setGear(final String value) {
        final String __oldValue = this.gear;
        try {
            this.vetoableChange__Support.fireVetoableChange("gear", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.gear = value;
        this.propertyChange__Support.firePropertyChange("gear", __oldValue, value);
    }

    public void setCranklength(final BigDecimal value) {
        final BigDecimal __oldValue = this.cranklength;
        try {
            this.vetoableChange__Support.fireVetoableChange("cranklength", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.cranklength = value;
        this.propertyChange__Support.firePropertyChange("cranklength", __oldValue, value);
    }

    public void setJoint(final String value) {
        final String __oldValue = this.joint;
        try {
            this.vetoableChange__Support.fireVetoableChange("joint", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.joint = value;
        this.propertyChange__Support.firePropertyChange("joint", __oldValue, value);
    }

    public void setJointinparent(final String value) {
        final String __oldValue = this.jointinparent;
        try {
            this.vetoableChange__Support.fireVetoableChange("jointinparent", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.jointinparent = value;
        this.propertyChange__Support.firePropertyChange("jointinparent", __oldValue, value);
    }

    public void setSite(final String value) {
        final String __oldValue = this.site;
        try {
            this.vetoableChange__Support.fireVetoableChange("site", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.site = value;
        this.propertyChange__Support.firePropertyChange("site", __oldValue, value);
    }

    public void setTendon(final String value) {
        final String __oldValue = this.tendon;
        try {
            this.vetoableChange__Support.fireVetoableChange("tendon", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.tendon = value;
        this.propertyChange__Support.firePropertyChange("tendon", __oldValue, value);
    }

    public void setCranksite(final String value) {
        final String __oldValue = this.cranksite;
        try {
            this.vetoableChange__Support.fireVetoableChange("cranksite", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.cranksite = value;
        this.propertyChange__Support.firePropertyChange("cranksite", __oldValue, value);
    }

    public void setSlidersite(final String value) {
        final String __oldValue = this.slidersite;
        try {
            this.vetoableChange__Support.fireVetoableChange("slidersite", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.slidersite = value;
        this.propertyChange__Support.firePropertyChange("slidersite", __oldValue, value);
    }

    public void setUser(final String value) {
        final String __oldValue = this.user;
        try {
            this.vetoableChange__Support.fireVetoableChange("user", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.user = value;
        this.propertyChange__Support.firePropertyChange("user", __oldValue, value);
    }

    public void setDyntype(final DyntypeType value) {
        final DyntypeType __oldValue = this.dyntype;
        try {
            this.vetoableChange__Support.fireVetoableChange("dyntype", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.dyntype = value;
        this.propertyChange__Support.firePropertyChange("dyntype", __oldValue, value);
    }

    public void setGaintype(final GaintypeType value) {
        final GaintypeType __oldValue = this.gaintype;
        try {
            this.vetoableChange__Support.fireVetoableChange("gaintype", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.gaintype = value;
        this.propertyChange__Support.firePropertyChange("gaintype", __oldValue, value);
    }

    public void setBiastype(final BiastypeType value) {
        final BiastypeType __oldValue = this.biastype;
        try {
            this.vetoableChange__Support.fireVetoableChange("biastype", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.biastype = value;
        this.propertyChange__Support.firePropertyChange("biastype", __oldValue, value);
    }

    public void setDynprm(final String value) {
        final String __oldValue = this.dynprm;
        try {
            this.vetoableChange__Support.fireVetoableChange("dynprm", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.dynprm = value;
        this.propertyChange__Support.firePropertyChange("dynprm", __oldValue, value);
    }

    public void setGainprm(final String value) {
        final String __oldValue = this.gainprm;
        try {
            this.vetoableChange__Support.fireVetoableChange("gainprm", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.gainprm = value;
        this.propertyChange__Support.firePropertyChange("gainprm", __oldValue, value);
    }

    public void setBiasprm(final String value) {
        final String __oldValue = this.biasprm;
        try {
            this.vetoableChange__Support.fireVetoableChange("biasprm", __oldValue, value);
        } catch (PropertyVetoException x) {
            throw new RuntimeException(x);
        }
        this.biasprm = value;
        this.propertyChange__Support.firePropertyChange("biasprm", __oldValue, value);
    }

    @Override
    public GeneralType clone() {
        final GeneralType _newObject;
        try {
            _newObject = ((GeneralType) super.clone());
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }
        return _newObject;
    }

    @Override
    public GeneralType createCopy() {
        final GeneralType _newObject;
        try {
            _newObject = ((GeneralType) super.clone());
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }
        _newObject.name = this.name;
        _newObject.clazz = this.clazz;
        _newObject.group = this.group;
        _newObject.ctrllimited = this.ctrllimited;
        _newObject.forcelimited = this.forcelimited;
        _newObject.ctrlrange = this.ctrlrange;
        _newObject.forcerange = this.forcerange;
        _newObject.lengthrange = this.lengthrange;
        _newObject.gear = this.gear;
        _newObject.cranklength = this.cranklength;
        _newObject.joint = this.joint;
        _newObject.jointinparent = this.jointinparent;
        _newObject.site = this.site;
        _newObject.tendon = this.tendon;
        _newObject.cranksite = this.cranksite;
        _newObject.slidersite = this.slidersite;
        _newObject.user = this.user;
        _newObject.dyntype = this.dyntype;
        _newObject.gaintype = this.gaintype;
        _newObject.biastype = this.biastype;
        _newObject.dynprm = this.dynprm;
        _newObject.gainprm = this.gainprm;
        _newObject.biasprm = this.biasprm;
        return _newObject;
    }

    @Override
    public GeneralType createCopy(final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        final GeneralType _newObject;
        try {
            _newObject = ((GeneralType) super.clone());
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }
        final PropertyTree namePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("name"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(namePropertyTree!= null):((namePropertyTree == null)||(!namePropertyTree.isLeaf())))) {
            _newObject.name = this.name;
        }
        final PropertyTree clazzPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("clazz"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(clazzPropertyTree!= null):((clazzPropertyTree == null)||(!clazzPropertyTree.isLeaf())))) {
            _newObject.clazz = this.clazz;
        }
        final PropertyTree groupPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("group"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(groupPropertyTree!= null):((groupPropertyTree == null)||(!groupPropertyTree.isLeaf())))) {
            _newObject.group = this.group;
        }
        final PropertyTree ctrllimitedPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("ctrllimited"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(ctrllimitedPropertyTree!= null):((ctrllimitedPropertyTree == null)||(!ctrllimitedPropertyTree.isLeaf())))) {
            _newObject.ctrllimited = this.ctrllimited;
        }
        final PropertyTree forcelimitedPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("forcelimited"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(forcelimitedPropertyTree!= null):((forcelimitedPropertyTree == null)||(!forcelimitedPropertyTree.isLeaf())))) {
            _newObject.forcelimited = this.forcelimited;
        }
        final PropertyTree ctrlrangePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("ctrlrange"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(ctrlrangePropertyTree!= null):((ctrlrangePropertyTree == null)||(!ctrlrangePropertyTree.isLeaf())))) {
            _newObject.ctrlrange = this.ctrlrange;
        }
        final PropertyTree forcerangePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("forcerange"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(forcerangePropertyTree!= null):((forcerangePropertyTree == null)||(!forcerangePropertyTree.isLeaf())))) {
            _newObject.forcerange = this.forcerange;
        }
        final PropertyTree lengthrangePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("lengthrange"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(lengthrangePropertyTree!= null):((lengthrangePropertyTree == null)||(!lengthrangePropertyTree.isLeaf())))) {
            _newObject.lengthrange = this.lengthrange;
        }
        final PropertyTree gearPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("gear"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(gearPropertyTree!= null):((gearPropertyTree == null)||(!gearPropertyTree.isLeaf())))) {
            _newObject.gear = this.gear;
        }
        final PropertyTree cranklengthPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("cranklength"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(cranklengthPropertyTree!= null):((cranklengthPropertyTree == null)||(!cranklengthPropertyTree.isLeaf())))) {
            _newObject.cranklength = this.cranklength;
        }
        final PropertyTree jointPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("joint"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(jointPropertyTree!= null):((jointPropertyTree == null)||(!jointPropertyTree.isLeaf())))) {
            _newObject.joint = this.joint;
        }
        final PropertyTree jointinparentPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("jointinparent"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(jointinparentPropertyTree!= null):((jointinparentPropertyTree == null)||(!jointinparentPropertyTree.isLeaf())))) {
            _newObject.jointinparent = this.jointinparent;
        }
        final PropertyTree sitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("site"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(sitePropertyTree!= null):((sitePropertyTree == null)||(!sitePropertyTree.isLeaf())))) {
            _newObject.site = this.site;
        }
        final PropertyTree tendonPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("tendon"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(tendonPropertyTree!= null):((tendonPropertyTree == null)||(!tendonPropertyTree.isLeaf())))) {
            _newObject.tendon = this.tendon;
        }
        final PropertyTree cranksitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("cranksite"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(cranksitePropertyTree!= null):((cranksitePropertyTree == null)||(!cranksitePropertyTree.isLeaf())))) {
            _newObject.cranksite = this.cranksite;
        }
        final PropertyTree slidersitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("slidersite"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(slidersitePropertyTree!= null):((slidersitePropertyTree == null)||(!slidersitePropertyTree.isLeaf())))) {
            _newObject.slidersite = this.slidersite;
        }
        final PropertyTree userPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("user"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(userPropertyTree!= null):((userPropertyTree == null)||(!userPropertyTree.isLeaf())))) {
            _newObject.user = this.user;
        }
        final PropertyTree dyntypePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("dyntype"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(dyntypePropertyTree!= null):((dyntypePropertyTree == null)||(!dyntypePropertyTree.isLeaf())))) {
            _newObject.dyntype = this.dyntype;
        }
        final PropertyTree gaintypePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("gaintype"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(gaintypePropertyTree!= null):((gaintypePropertyTree == null)||(!gaintypePropertyTree.isLeaf())))) {
            _newObject.gaintype = this.gaintype;
        }
        final PropertyTree biastypePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("biastype"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(biastypePropertyTree!= null):((biastypePropertyTree == null)||(!biastypePropertyTree.isLeaf())))) {
            _newObject.biastype = this.biastype;
        }
        final PropertyTree dynprmPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("dynprm"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(dynprmPropertyTree!= null):((dynprmPropertyTree == null)||(!dynprmPropertyTree.isLeaf())))) {
            _newObject.dynprm = this.dynprm;
        }
        final PropertyTree gainprmPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("gainprm"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(gainprmPropertyTree!= null):((gainprmPropertyTree == null)||(!gainprmPropertyTree.isLeaf())))) {
            _newObject.gainprm = this.gainprm;
        }
        final PropertyTree biasprmPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("biasprm"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(biasprmPropertyTree!= null):((biasprmPropertyTree == null)||(!biasprmPropertyTree.isLeaf())))) {
            _newObject.biasprm = this.biasprm;
        }
        return _newObject;
    }

    @Override
    public GeneralType copyExcept(final PropertyTree _propertyTree) {
        return createCopy(_propertyTree, PropertyTreeUse.EXCLUDE);
    }

    @Override
    public GeneralType copyOnly(final PropertyTree _propertyTree) {
        return createCopy(_propertyTree, PropertyTreeUse.INCLUDE);
    }

    /**
     * Copies all state of this object to a builder. This method is used by the {@link #copyOf} method and should not be called directly by client code.
     * 
     * @param _other
     *     A builder instance to which the state of this object will be copied.
     */
    public<_B >void copyTo(final GeneralType.Builder<_B> _other) {
        _other.name = this.name;
        _other.clazz = this.clazz;
        _other.group = this.group;
        _other.ctrllimited = this.ctrllimited;
        _other.forcelimited = this.forcelimited;
        _other.ctrlrange = this.ctrlrange;
        _other.forcerange = this.forcerange;
        _other.lengthrange = this.lengthrange;
        _other.gear = this.gear;
        _other.cranklength = this.cranklength;
        _other.joint = this.joint;
        _other.jointinparent = this.jointinparent;
        _other.site = this.site;
        _other.tendon = this.tendon;
        _other.cranksite = this.cranksite;
        _other.slidersite = this.slidersite;
        _other.user = this.user;
        _other.dyntype = this.dyntype;
        _other.gaintype = this.gaintype;
        _other.biastype = this.biastype;
        _other.dynprm = this.dynprm;
        _other.gainprm = this.gainprm;
        _other.biasprm = this.biasprm;
    }

    public<_B >GeneralType.Builder<_B> newCopyBuilder(final _B _parentBuilder) {
        return new GeneralType.Builder<_B>(_parentBuilder, this, true);
    }

    public GeneralType.Builder<Void> newCopyBuilder() {
        return newCopyBuilder(null);
    }

    public static GeneralType.Builder<Void> builder() {
        return new GeneralType.Builder<Void>(null, null, false);
    }

    public static<_B >GeneralType.Builder<_B> copyOf(final GeneralType _other) {
        final GeneralType.Builder<_B> _newBuilder = new GeneralType.Builder<_B>(null, null, false);
        _other.copyTo(_newBuilder);
        return _newBuilder;
    }

    /**
     * Copies all state of this object to a builder. This method is used by the {@link #copyOf} method and should not be called directly by client code.
     * 
     * @param _other
     *     A builder instance to which the state of this object will be copied.
     */
    public<_B >void copyTo(final GeneralType.Builder<_B> _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        final PropertyTree namePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("name"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(namePropertyTree!= null):((namePropertyTree == null)||(!namePropertyTree.isLeaf())))) {
            _other.name = this.name;
        }
        final PropertyTree clazzPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("clazz"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(clazzPropertyTree!= null):((clazzPropertyTree == null)||(!clazzPropertyTree.isLeaf())))) {
            _other.clazz = this.clazz;
        }
        final PropertyTree groupPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("group"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(groupPropertyTree!= null):((groupPropertyTree == null)||(!groupPropertyTree.isLeaf())))) {
            _other.group = this.group;
        }
        final PropertyTree ctrllimitedPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("ctrllimited"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(ctrllimitedPropertyTree!= null):((ctrllimitedPropertyTree == null)||(!ctrllimitedPropertyTree.isLeaf())))) {
            _other.ctrllimited = this.ctrllimited;
        }
        final PropertyTree forcelimitedPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("forcelimited"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(forcelimitedPropertyTree!= null):((forcelimitedPropertyTree == null)||(!forcelimitedPropertyTree.isLeaf())))) {
            _other.forcelimited = this.forcelimited;
        }
        final PropertyTree ctrlrangePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("ctrlrange"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(ctrlrangePropertyTree!= null):((ctrlrangePropertyTree == null)||(!ctrlrangePropertyTree.isLeaf())))) {
            _other.ctrlrange = this.ctrlrange;
        }
        final PropertyTree forcerangePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("forcerange"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(forcerangePropertyTree!= null):((forcerangePropertyTree == null)||(!forcerangePropertyTree.isLeaf())))) {
            _other.forcerange = this.forcerange;
        }
        final PropertyTree lengthrangePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("lengthrange"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(lengthrangePropertyTree!= null):((lengthrangePropertyTree == null)||(!lengthrangePropertyTree.isLeaf())))) {
            _other.lengthrange = this.lengthrange;
        }
        final PropertyTree gearPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("gear"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(gearPropertyTree!= null):((gearPropertyTree == null)||(!gearPropertyTree.isLeaf())))) {
            _other.gear = this.gear;
        }
        final PropertyTree cranklengthPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("cranklength"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(cranklengthPropertyTree!= null):((cranklengthPropertyTree == null)||(!cranklengthPropertyTree.isLeaf())))) {
            _other.cranklength = this.cranklength;
        }
        final PropertyTree jointPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("joint"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(jointPropertyTree!= null):((jointPropertyTree == null)||(!jointPropertyTree.isLeaf())))) {
            _other.joint = this.joint;
        }
        final PropertyTree jointinparentPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("jointinparent"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(jointinparentPropertyTree!= null):((jointinparentPropertyTree == null)||(!jointinparentPropertyTree.isLeaf())))) {
            _other.jointinparent = this.jointinparent;
        }
        final PropertyTree sitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("site"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(sitePropertyTree!= null):((sitePropertyTree == null)||(!sitePropertyTree.isLeaf())))) {
            _other.site = this.site;
        }
        final PropertyTree tendonPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("tendon"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(tendonPropertyTree!= null):((tendonPropertyTree == null)||(!tendonPropertyTree.isLeaf())))) {
            _other.tendon = this.tendon;
        }
        final PropertyTree cranksitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("cranksite"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(cranksitePropertyTree!= null):((cranksitePropertyTree == null)||(!cranksitePropertyTree.isLeaf())))) {
            _other.cranksite = this.cranksite;
        }
        final PropertyTree slidersitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("slidersite"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(slidersitePropertyTree!= null):((slidersitePropertyTree == null)||(!slidersitePropertyTree.isLeaf())))) {
            _other.slidersite = this.slidersite;
        }
        final PropertyTree userPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("user"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(userPropertyTree!= null):((userPropertyTree == null)||(!userPropertyTree.isLeaf())))) {
            _other.user = this.user;
        }
        final PropertyTree dyntypePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("dyntype"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(dyntypePropertyTree!= null):((dyntypePropertyTree == null)||(!dyntypePropertyTree.isLeaf())))) {
            _other.dyntype = this.dyntype;
        }
        final PropertyTree gaintypePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("gaintype"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(gaintypePropertyTree!= null):((gaintypePropertyTree == null)||(!gaintypePropertyTree.isLeaf())))) {
            _other.gaintype = this.gaintype;
        }
        final PropertyTree biastypePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("biastype"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(biastypePropertyTree!= null):((biastypePropertyTree == null)||(!biastypePropertyTree.isLeaf())))) {
            _other.biastype = this.biastype;
        }
        final PropertyTree dynprmPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("dynprm"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(dynprmPropertyTree!= null):((dynprmPropertyTree == null)||(!dynprmPropertyTree.isLeaf())))) {
            _other.dynprm = this.dynprm;
        }
        final PropertyTree gainprmPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("gainprm"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(gainprmPropertyTree!= null):((gainprmPropertyTree == null)||(!gainprmPropertyTree.isLeaf())))) {
            _other.gainprm = this.gainprm;
        }
        final PropertyTree biasprmPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("biasprm"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(biasprmPropertyTree!= null):((biasprmPropertyTree == null)||(!biasprmPropertyTree.isLeaf())))) {
            _other.biasprm = this.biasprm;
        }
    }

    public<_B >GeneralType.Builder<_B> newCopyBuilder(final _B _parentBuilder, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        return new GeneralType.Builder<_B>(_parentBuilder, this, true, _propertyTree, _propertyTreeUse);
    }

    public GeneralType.Builder<Void> newCopyBuilder(final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        return newCopyBuilder(null, _propertyTree, _propertyTreeUse);
    }

    public static<_B >GeneralType.Builder<_B> copyOf(final GeneralType _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        final GeneralType.Builder<_B> _newBuilder = new GeneralType.Builder<_B>(null, null, false);
        _other.copyTo(_newBuilder, _propertyTree, _propertyTreeUse);
        return _newBuilder;
    }

    public static GeneralType.Builder<Void> copyExcept(final GeneralType _other, final PropertyTree _propertyTree) {
        return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
    }

    public static GeneralType.Builder<Void> copyOnly(final GeneralType _other, final PropertyTree _propertyTree) {
        return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
    }

    public GeneralType visit(final PropertyVisitor _visitor_) {
        _visitor_.visit(this);
        return this;
    }

    public static class Builder<_B >implements Buildable
    {

        protected final _B _parentBuilder;
        private String name;
        private String clazz;
        private Integer group;
        private Boolean ctrllimited;
        private Boolean forcelimited;
        private String ctrlrange;
        private String forcerange;
        private String lengthrange;
        private String gear;
        private BigDecimal cranklength;
        private String joint;
        private String jointinparent;
        private String site;
        private String tendon;
        private String cranksite;
        private String slidersite;
        private String user;
        private DyntypeType dyntype;
        private GaintypeType gaintype;
        private BiastypeType biastype;
        private String dynprm;
        private String gainprm;
        private String biasprm;

        public Builder(final _B _parentBuilder, final GeneralType _other, final boolean _copy) {
            this._parentBuilder = _parentBuilder;
            if (_other!= null) {
                this.name = _other.name;
                this.clazz = _other.clazz;
                this.group = _other.group;
                this.ctrllimited = _other.ctrllimited;
                this.forcelimited = _other.forcelimited;
                this.ctrlrange = _other.ctrlrange;
                this.forcerange = _other.forcerange;
                this.lengthrange = _other.lengthrange;
                this.gear = _other.gear;
                this.cranklength = _other.cranklength;
                this.joint = _other.joint;
                this.jointinparent = _other.jointinparent;
                this.site = _other.site;
                this.tendon = _other.tendon;
                this.cranksite = _other.cranksite;
                this.slidersite = _other.slidersite;
                this.user = _other.user;
                this.dyntype = _other.dyntype;
                this.gaintype = _other.gaintype;
                this.biastype = _other.biastype;
                this.dynprm = _other.dynprm;
                this.gainprm = _other.gainprm;
                this.biasprm = _other.biasprm;
            }
        }

        public Builder(final _B _parentBuilder, final GeneralType _other, final boolean _copy, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            this._parentBuilder = _parentBuilder;
            if (_other!= null) {
                final PropertyTree namePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("name"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(namePropertyTree!= null):((namePropertyTree == null)||(!namePropertyTree.isLeaf())))) {
                    this.name = _other.name;
                }
                final PropertyTree clazzPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("clazz"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(clazzPropertyTree!= null):((clazzPropertyTree == null)||(!clazzPropertyTree.isLeaf())))) {
                    this.clazz = _other.clazz;
                }
                final PropertyTree groupPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("group"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(groupPropertyTree!= null):((groupPropertyTree == null)||(!groupPropertyTree.isLeaf())))) {
                    this.group = _other.group;
                }
                final PropertyTree ctrllimitedPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("ctrllimited"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(ctrllimitedPropertyTree!= null):((ctrllimitedPropertyTree == null)||(!ctrllimitedPropertyTree.isLeaf())))) {
                    this.ctrllimited = _other.ctrllimited;
                }
                final PropertyTree forcelimitedPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("forcelimited"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(forcelimitedPropertyTree!= null):((forcelimitedPropertyTree == null)||(!forcelimitedPropertyTree.isLeaf())))) {
                    this.forcelimited = _other.forcelimited;
                }
                final PropertyTree ctrlrangePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("ctrlrange"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(ctrlrangePropertyTree!= null):((ctrlrangePropertyTree == null)||(!ctrlrangePropertyTree.isLeaf())))) {
                    this.ctrlrange = _other.ctrlrange;
                }
                final PropertyTree forcerangePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("forcerange"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(forcerangePropertyTree!= null):((forcerangePropertyTree == null)||(!forcerangePropertyTree.isLeaf())))) {
                    this.forcerange = _other.forcerange;
                }
                final PropertyTree lengthrangePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("lengthrange"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(lengthrangePropertyTree!= null):((lengthrangePropertyTree == null)||(!lengthrangePropertyTree.isLeaf())))) {
                    this.lengthrange = _other.lengthrange;
                }
                final PropertyTree gearPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("gear"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(gearPropertyTree!= null):((gearPropertyTree == null)||(!gearPropertyTree.isLeaf())))) {
                    this.gear = _other.gear;
                }
                final PropertyTree cranklengthPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("cranklength"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(cranklengthPropertyTree!= null):((cranklengthPropertyTree == null)||(!cranklengthPropertyTree.isLeaf())))) {
                    this.cranklength = _other.cranklength;
                }
                final PropertyTree jointPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("joint"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(jointPropertyTree!= null):((jointPropertyTree == null)||(!jointPropertyTree.isLeaf())))) {
                    this.joint = _other.joint;
                }
                final PropertyTree jointinparentPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("jointinparent"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(jointinparentPropertyTree!= null):((jointinparentPropertyTree == null)||(!jointinparentPropertyTree.isLeaf())))) {
                    this.jointinparent = _other.jointinparent;
                }
                final PropertyTree sitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("site"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(sitePropertyTree!= null):((sitePropertyTree == null)||(!sitePropertyTree.isLeaf())))) {
                    this.site = _other.site;
                }
                final PropertyTree tendonPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("tendon"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(tendonPropertyTree!= null):((tendonPropertyTree == null)||(!tendonPropertyTree.isLeaf())))) {
                    this.tendon = _other.tendon;
                }
                final PropertyTree cranksitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("cranksite"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(cranksitePropertyTree!= null):((cranksitePropertyTree == null)||(!cranksitePropertyTree.isLeaf())))) {
                    this.cranksite = _other.cranksite;
                }
                final PropertyTree slidersitePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("slidersite"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(slidersitePropertyTree!= null):((slidersitePropertyTree == null)||(!slidersitePropertyTree.isLeaf())))) {
                    this.slidersite = _other.slidersite;
                }
                final PropertyTree userPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("user"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(userPropertyTree!= null):((userPropertyTree == null)||(!userPropertyTree.isLeaf())))) {
                    this.user = _other.user;
                }
                final PropertyTree dyntypePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("dyntype"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(dyntypePropertyTree!= null):((dyntypePropertyTree == null)||(!dyntypePropertyTree.isLeaf())))) {
                    this.dyntype = _other.dyntype;
                }
                final PropertyTree gaintypePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("gaintype"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(gaintypePropertyTree!= null):((gaintypePropertyTree == null)||(!gaintypePropertyTree.isLeaf())))) {
                    this.gaintype = _other.gaintype;
                }
                final PropertyTree biastypePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("biastype"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(biastypePropertyTree!= null):((biastypePropertyTree == null)||(!biastypePropertyTree.isLeaf())))) {
                    this.biastype = _other.biastype;
                }
                final PropertyTree dynprmPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("dynprm"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(dynprmPropertyTree!= null):((dynprmPropertyTree == null)||(!dynprmPropertyTree.isLeaf())))) {
                    this.dynprm = _other.dynprm;
                }
                final PropertyTree gainprmPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("gainprm"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(gainprmPropertyTree!= null):((gainprmPropertyTree == null)||(!gainprmPropertyTree.isLeaf())))) {
                    this.gainprm = _other.gainprm;
                }
                final PropertyTree biasprmPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("biasprm"));
                if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(biasprmPropertyTree!= null):((biasprmPropertyTree == null)||(!biasprmPropertyTree.isLeaf())))) {
                    this.biasprm = _other.biasprm;
                }
            }
        }

        public _B end() {
            return this._parentBuilder;
        }

        protected<_P extends GeneralType >_P init(final _P _product) {
            _product.name = this.name;
            _product.clazz = this.clazz;
            _product.group = this.group;
            _product.ctrllimited = this.ctrllimited;
            _product.forcelimited = this.forcelimited;
            _product.ctrlrange = this.ctrlrange;
            _product.forcerange = this.forcerange;
            _product.lengthrange = this.lengthrange;
            _product.gear = this.gear;
            _product.cranklength = this.cranklength;
            _product.joint = this.joint;
            _product.jointinparent = this.jointinparent;
            _product.site = this.site;
            _product.tendon = this.tendon;
            _product.cranksite = this.cranksite;
            _product.slidersite = this.slidersite;
            _product.user = this.user;
            _product.dyntype = this.dyntype;
            _product.gaintype = this.gaintype;
            _product.biastype = this.biastype;
            _product.dynprm = this.dynprm;
            _product.gainprm = this.gainprm;
            _product.biasprm = this.biasprm;
            return _product;
        }

        /**
         * Sets the new value of "name" (any previous value will be replaced)
         * 
         * @param name
         *     New value of the "name" property.
         */
        public GeneralType.Builder<_B> withName(final String name) {
            this.name = name;
            return this;
        }

        /**
         * Sets the new value of "clazz" (any previous value will be replaced)
         * 
         * @param clazz
         *     New value of the "clazz" property.
         */
        public GeneralType.Builder<_B> withClazz(final String clazz) {
            this.clazz = clazz;
            return this;
        }

        /**
         * Sets the new value of "group" (any previous value will be replaced)
         * 
         * @param group
         *     New value of the "group" property.
         */
        public GeneralType.Builder<_B> withGroup(final Integer group) {
            this.group = group;
            return this;
        }

        /**
         * Sets the new value of "ctrllimited" (any previous value will be replaced)
         * 
         * @param ctrllimited
         *     New value of the "ctrllimited" property.
         */
        public GeneralType.Builder<_B> withCtrllimited(final Boolean ctrllimited) {
            this.ctrllimited = ctrllimited;
            return this;
        }

        /**
         * Sets the new value of "forcelimited" (any previous value will be replaced)
         * 
         * @param forcelimited
         *     New value of the "forcelimited" property.
         */
        public GeneralType.Builder<_B> withForcelimited(final Boolean forcelimited) {
            this.forcelimited = forcelimited;
            return this;
        }

        /**
         * Sets the new value of "ctrlrange" (any previous value will be replaced)
         * 
         * @param ctrlrange
         *     New value of the "ctrlrange" property.
         */
        public GeneralType.Builder<_B> withCtrlrange(final String ctrlrange) {
            this.ctrlrange = ctrlrange;
            return this;
        }

        /**
         * Sets the new value of "forcerange" (any previous value will be replaced)
         * 
         * @param forcerange
         *     New value of the "forcerange" property.
         */
        public GeneralType.Builder<_B> withForcerange(final String forcerange) {
            this.forcerange = forcerange;
            return this;
        }

        /**
         * Sets the new value of "lengthrange" (any previous value will be replaced)
         * 
         * @param lengthrange
         *     New value of the "lengthrange" property.
         */
        public GeneralType.Builder<_B> withLengthrange(final String lengthrange) {
            this.lengthrange = lengthrange;
            return this;
        }

        /**
         * Sets the new value of "gear" (any previous value will be replaced)
         * 
         * @param gear
         *     New value of the "gear" property.
         */
        public GeneralType.Builder<_B> withGear(final String gear) {
            this.gear = gear;
            return this;
        }

        /**
         * Sets the new value of "cranklength" (any previous value will be replaced)
         * 
         * @param cranklength
         *     New value of the "cranklength" property.
         */
        public GeneralType.Builder<_B> withCranklength(final BigDecimal cranklength) {
            this.cranklength = cranklength;
            return this;
        }

        /**
         * Sets the new value of "joint" (any previous value will be replaced)
         * 
         * @param joint
         *     New value of the "joint" property.
         */
        public GeneralType.Builder<_B> withJoint(final String joint) {
            this.joint = joint;
            return this;
        }

        /**
         * Sets the new value of "jointinparent" (any previous value will be replaced)
         * 
         * @param jointinparent
         *     New value of the "jointinparent" property.
         */
        public GeneralType.Builder<_B> withJointinparent(final String jointinparent) {
            this.jointinparent = jointinparent;
            return this;
        }

        /**
         * Sets the new value of "site" (any previous value will be replaced)
         * 
         * @param site
         *     New value of the "site" property.
         */
        public GeneralType.Builder<_B> withSite(final String site) {
            this.site = site;
            return this;
        }

        /**
         * Sets the new value of "tendon" (any previous value will be replaced)
         * 
         * @param tendon
         *     New value of the "tendon" property.
         */
        public GeneralType.Builder<_B> withTendon(final String tendon) {
            this.tendon = tendon;
            return this;
        }

        /**
         * Sets the new value of "cranksite" (any previous value will be replaced)
         * 
         * @param cranksite
         *     New value of the "cranksite" property.
         */
        public GeneralType.Builder<_B> withCranksite(final String cranksite) {
            this.cranksite = cranksite;
            return this;
        }

        /**
         * Sets the new value of "slidersite" (any previous value will be replaced)
         * 
         * @param slidersite
         *     New value of the "slidersite" property.
         */
        public GeneralType.Builder<_B> withSlidersite(final String slidersite) {
            this.slidersite = slidersite;
            return this;
        }

        /**
         * Sets the new value of "user" (any previous value will be replaced)
         * 
         * @param user
         *     New value of the "user" property.
         */
        public GeneralType.Builder<_B> withUser(final String user) {
            this.user = user;
            return this;
        }

        /**
         * Sets the new value of "dyntype" (any previous value will be replaced)
         * 
         * @param dyntype
         *     New value of the "dyntype" property.
         */
        public GeneralType.Builder<_B> withDyntype(final DyntypeType dyntype) {
            this.dyntype = dyntype;
            return this;
        }

        /**
         * Sets the new value of "gaintype" (any previous value will be replaced)
         * 
         * @param gaintype
         *     New value of the "gaintype" property.
         */
        public GeneralType.Builder<_B> withGaintype(final GaintypeType gaintype) {
            this.gaintype = gaintype;
            return this;
        }

        /**
         * Sets the new value of "biastype" (any previous value will be replaced)
         * 
         * @param biastype
         *     New value of the "biastype" property.
         */
        public GeneralType.Builder<_B> withBiastype(final BiastypeType biastype) {
            this.biastype = biastype;
            return this;
        }

        /**
         * Sets the new value of "dynprm" (any previous value will be replaced)
         * 
         * @param dynprm
         *     New value of the "dynprm" property.
         */
        public GeneralType.Builder<_B> withDynprm(final String dynprm) {
            this.dynprm = dynprm;
            return this;
        }

        /**
         * Sets the new value of "gainprm" (any previous value will be replaced)
         * 
         * @param gainprm
         *     New value of the "gainprm" property.
         */
        public GeneralType.Builder<_B> withGainprm(final String gainprm) {
            this.gainprm = gainprm;
            return this;
        }

        /**
         * Sets the new value of "biasprm" (any previous value will be replaced)
         * 
         * @param biasprm
         *     New value of the "biasprm" property.
         */
        public GeneralType.Builder<_B> withBiasprm(final String biasprm) {
            this.biasprm = biasprm;
            return this;
        }

        @Override
        public GeneralType build() {
            return this.init(new GeneralType());
        }

        public GeneralType.Builder<_B> copyOf(final GeneralType _other) {
            _other.copyTo(this);
            return this;
        }

        public GeneralType.Builder<_B> copyOf(final GeneralType.Builder _other) {
            return copyOf(_other.build());
        }

    }

    public static class PropInfo {

        public final static transient String NAME = "name";
        public final static transient String CLAZZ = "clazz";
        public final static transient String GROUP = "group";
        public final static transient String CTRLLIMITED = "ctrllimited";
        public final static transient String FORCELIMITED = "forcelimited";
        public final static transient String CTRLRANGE = "ctrlrange";
        public final static transient String FORCERANGE = "forcerange";
        public final static transient String LENGTHRANGE = "lengthrange";
        public final static transient String GEAR = "gear";
        public final static transient String CRANKLENGTH = "cranklength";
        public final static transient String JOINT = "joint";
        public final static transient String JOINTINPARENT = "jointinparent";
        public final static transient String SITE = "site";
        public final static transient String TENDON = "tendon";
        public final static transient String CRANKSITE = "cranksite";
        public final static transient String SLIDERSITE = "slidersite";
        public final static transient String USER = "user";
        public final static transient String DYNTYPE = "dyntype";
        public final static transient String GAINTYPE = "gaintype";
        public final static transient String BIASTYPE = "biastype";
        public final static transient String DYNPRM = "dynprm";
        public final static transient String GAINPRM = "gainprm";
        public final static transient String BIASPRM = "biasprm";

    }

    public static class Select
        extends GeneralType.Selector<GeneralType.Select, Void>
    {


        Select() {
            super(null, null, null);
        }

        public static GeneralType.Select _root() {
            return new GeneralType.Select();
        }

    }

    public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
        extends com.kscs.util.jaxb.Selector<TRoot, TParent>
    {

        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> name = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> clazz = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> group = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> ctrllimited = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> forcelimited = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> ctrlrange = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> forcerange = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> lengthrange = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> gear = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> cranklength = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> joint = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> jointinparent = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> site = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> tendon = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> cranksite = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> slidersite = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> user = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> dyntype = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> gaintype = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> biastype = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> dynprm = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> gainprm = null;
        private com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> biasprm = null;

        public Selector(final TRoot root, final TParent parent, final String propertyName) {
            super(root, parent, propertyName);
        }

        @Override
        public Map<String, PropertyTree> buildChildren() {
            final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
            products.putAll(super.buildChildren());
            if (this.name!= null) {
                products.put("name", this.name.init());
            }
            if (this.clazz!= null) {
                products.put("clazz", this.clazz.init());
            }
            if (this.group!= null) {
                products.put("group", this.group.init());
            }
            if (this.ctrllimited!= null) {
                products.put("ctrllimited", this.ctrllimited.init());
            }
            if (this.forcelimited!= null) {
                products.put("forcelimited", this.forcelimited.init());
            }
            if (this.ctrlrange!= null) {
                products.put("ctrlrange", this.ctrlrange.init());
            }
            if (this.forcerange!= null) {
                products.put("forcerange", this.forcerange.init());
            }
            if (this.lengthrange!= null) {
                products.put("lengthrange", this.lengthrange.init());
            }
            if (this.gear!= null) {
                products.put("gear", this.gear.init());
            }
            if (this.cranklength!= null) {
                products.put("cranklength", this.cranklength.init());
            }
            if (this.joint!= null) {
                products.put("joint", this.joint.init());
            }
            if (this.jointinparent!= null) {
                products.put("jointinparent", this.jointinparent.init());
            }
            if (this.site!= null) {
                products.put("site", this.site.init());
            }
            if (this.tendon!= null) {
                products.put("tendon", this.tendon.init());
            }
            if (this.cranksite!= null) {
                products.put("cranksite", this.cranksite.init());
            }
            if (this.slidersite!= null) {
                products.put("slidersite", this.slidersite.init());
            }
            if (this.user!= null) {
                products.put("user", this.user.init());
            }
            if (this.dyntype!= null) {
                products.put("dyntype", this.dyntype.init());
            }
            if (this.gaintype!= null) {
                products.put("gaintype", this.gaintype.init());
            }
            if (this.biastype!= null) {
                products.put("biastype", this.biastype.init());
            }
            if (this.dynprm!= null) {
                products.put("dynprm", this.dynprm.init());
            }
            if (this.gainprm!= null) {
                products.put("gainprm", this.gainprm.init());
            }
            if (this.biasprm!= null) {
                products.put("biasprm", this.biasprm.init());
            }
            return products;
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> name() {
            return ((this.name == null)?this.name = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "name"):this.name);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> clazz() {
            return ((this.clazz == null)?this.clazz = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "clazz"):this.clazz);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> group() {
            return ((this.group == null)?this.group = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "group"):this.group);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> ctrllimited() {
            return ((this.ctrllimited == null)?this.ctrllimited = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "ctrllimited"):this.ctrllimited);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> forcelimited() {
            return ((this.forcelimited == null)?this.forcelimited = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "forcelimited"):this.forcelimited);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> ctrlrange() {
            return ((this.ctrlrange == null)?this.ctrlrange = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "ctrlrange"):this.ctrlrange);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> forcerange() {
            return ((this.forcerange == null)?this.forcerange = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "forcerange"):this.forcerange);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> lengthrange() {
            return ((this.lengthrange == null)?this.lengthrange = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "lengthrange"):this.lengthrange);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> gear() {
            return ((this.gear == null)?this.gear = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "gear"):this.gear);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> cranklength() {
            return ((this.cranklength == null)?this.cranklength = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "cranklength"):this.cranklength);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> joint() {
            return ((this.joint == null)?this.joint = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "joint"):this.joint);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> jointinparent() {
            return ((this.jointinparent == null)?this.jointinparent = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "jointinparent"):this.jointinparent);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> site() {
            return ((this.site == null)?this.site = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "site"):this.site);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> tendon() {
            return ((this.tendon == null)?this.tendon = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "tendon"):this.tendon);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> cranksite() {
            return ((this.cranksite == null)?this.cranksite = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "cranksite"):this.cranksite);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> slidersite() {
            return ((this.slidersite == null)?this.slidersite = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "slidersite"):this.slidersite);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> user() {
            return ((this.user == null)?this.user = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "user"):this.user);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> dyntype() {
            return ((this.dyntype == null)?this.dyntype = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "dyntype"):this.dyntype);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> gaintype() {
            return ((this.gaintype == null)?this.gaintype = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "gaintype"):this.gaintype);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> biastype() {
            return ((this.biastype == null)?this.biastype = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "biastype"):this.biastype);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> dynprm() {
            return ((this.dynprm == null)?this.dynprm = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "dynprm"):this.dynprm);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> gainprm() {
            return ((this.gainprm == null)?this.gainprm = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "gainprm"):this.gainprm);
        }

        public com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>> biasprm() {
            return ((this.biasprm == null)?this.biasprm = new com.kscs.util.jaxb.Selector<TRoot, GeneralType.Selector<TRoot, TParent>>(this._root, this, "biasprm"):this.biasprm);
        }

    }

}
